{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/admin/admin-bloques-registro/admin-bloques-registro.component.css","webpack:///./src/app/admin/admin-bloques-registro/admin-bloques-registro.component.html","webpack:///./src/app/admin/admin-bloques-registro/admin-bloques-registro.component.ts","webpack:///./src/app/admin/admin-db/admin-db.component.css","webpack:///./src/app/admin/admin-db/admin-db.component.html","webpack:///./src/app/admin/admin-db/admin-db.component.ts","webpack:///./src/app/admin/admin-elecciones/dashboard-elecciones/dashboard-elecciones.component.css","webpack:///./src/app/admin/admin-elecciones/dashboard-elecciones/dashboard-elecciones.component.html","webpack:///./src/app/admin/admin-elecciones/dashboard-elecciones/dashboard-elecciones.component.ts","webpack:///./src/app/admin/admin-elecciones/eleccion-card/eleccion-card.component.css","webpack:///./src/app/admin/admin-elecciones/eleccion-card/eleccion-card.component.html","webpack:///./src/app/admin/admin-elecciones/eleccion-card/eleccion-card.component.ts","webpack:///./src/app/admin/admin-elecciones/elecciones-grid/elecciones-grid.component.css","webpack:///./src/app/admin/admin-elecciones/elecciones-grid/elecciones-grid.component.html","webpack:///./src/app/admin/admin-elecciones/elecciones-grid/elecciones-grid.component.ts","webpack:///./src/app/admin/admin-registros/admin-registros.component.css","webpack:///./src/app/admin/admin-registros/admin-registros.component.html","webpack:///./src/app/admin/admin-registros/admin-registros.component.ts","webpack:///./src/app/admin/admin-resultados/admin-resultados.component.css","webpack:///./src/app/admin/admin-resultados/admin-resultados.component.html","webpack:///./src/app/admin/admin-resultados/admin-resultados.component.ts","webpack:///./src/app/admin/admin-roles/admin-roles.component.css","webpack:///./src/app/admin/admin-roles/admin-roles.component.html","webpack:///./src/app/admin/admin-roles/admin-roles.component.ts","webpack:///./src/app/admin/home/admin-home/admin-card/admin-card.component.css","webpack:///./src/app/admin/home/admin-home/admin-card/admin-card.component.html","webpack:///./src/app/admin/home/admin-home/admin-card/admin-card.component.ts","webpack:///./src/app/admin/home/admin-home/admin-dashboard/admin-dashboard.component.css","webpack:///./src/app/admin/home/admin-home/admin-dashboard/admin-dashboard.component.html","webpack:///./src/app/admin/home/admin-home/admin-dashboard/admin-dashboard.component.ts","webpack:///./src/app/admin/home/admin-home/admin-grid/admin-grid.component.css","webpack:///./src/app/admin/home/admin-home/admin-grid/admin-grid.component.html","webpack:///./src/app/admin/home/admin-home/admin-grid/admin-grid.component.ts","webpack:///./src/app/admin/home/admin-home/admin-home.component.css","webpack:///./src/app/admin/home/admin-home/admin-home.component.html","webpack:///./src/app/admin/home/admin-home/admin-home.component.ts","webpack:///./src/app/admin/home/bloque-dialog/bloque-dialog.component.css","webpack:///./src/app/admin/home/bloque-dialog/bloque-dialog.component.html","webpack:///./src/app/admin/home/bloque-dialog/bloque-dialog.component.ts","webpack:///./src/app/admin/home/eleccion-dialog/eleccion-dialog.component.css","webpack:///./src/app/admin/home/eleccion-dialog/eleccion-dialog.component.html","webpack:///./src/app/admin/home/eleccion-dialog/eleccion-dialog.component.ts","webpack:///./src/app/admin/nav-bar-admin/nav-bar-admin.component.css","webpack:///./src/app/admin/nav-bar-admin/nav-bar-admin.component.html","webpack:///./src/app/admin/nav-bar-admin/nav-bar-admin.component.ts","webpack:///./src/app/admin/users/add-role-dialog/add-role-dialog.component.css","webpack:///./src/app/admin/users/add-role-dialog/add-role-dialog.component.html","webpack:///./src/app/admin/users/add-role-dialog/add-role-dialog.component.ts","webpack:///./src/app/admin/users/users.component.css","webpack:///./src/app/admin/users/users.component.html","webpack:///./src/app/admin/users/users.component.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/asesor/asesor-dashboard/asesor-dashboard.component.css","webpack:///./src/app/asesor/asesor-dashboard/asesor-dashboard.component.html","webpack:///./src/app/asesor/asesor-dashboard/asesor-dashboard.component.ts","webpack:///./src/app/asesor/nav-bar-asesor/nav-bar-asesor.component.css","webpack:///./src/app/asesor/nav-bar-asesor/nav-bar-asesor.component.html","webpack:///./src/app/asesor/nav-bar-asesor/nav-bar-asesor.component.ts","webpack:///./src/app/candidatos/candidatos-registro/candidatos-registro.component.css","webpack:///./src/app/candidatos/candidatos-registro/candidatos-registro.component.html","webpack:///./src/app/candidatos/candidatos-registro/candidatos-registro.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/nav-bar/nav-bar.component.css","webpack:///./src/app/nav-bar/nav-bar.component.html","webpack:///./src/app/nav-bar/nav-bar.component.ts","webpack:///./src/app/services/database.service.ts","webpack:///./src/app/signup/signup.component.css","webpack:///./src/app/signup/signup.component.html","webpack:///./src/app/signup/signup.component.ts","webpack:///./src/app/user/user-home/user-home.component.css","webpack:///./src/app/user/user-home/user-home.component.html","webpack:///./src/app/user/user-home/user-home.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".csa-card{\\n  max-width: 70%;\\n  margin-left: auto;\\n  margin-right: auto;\\n  background: linear-gradient(to top left, #702082 38%, #993399 100%);\\n}\\n\\n.care-card{\\n  max-width: 70%;\\n  margin-left: auto;\\n  margin-right: auto;\\n  background: linear-gradient(to top left, #ff671f 18%, #ff9900 78%);\\n}\\n\\n.ejecutivo-card{\\n  max-width: 70%;\\n  margin-left: auto;\\n  margin-right: auto;\\n  background: linear-gradient(to bottom right, #41b6e6 38%, #3399ff 100%);\\n}\\n\\np{\\n  font-size: 20px;\\n}\\n\\nh1{\\n  color: black;\\n  font-family: helvetica;\\n}\\n\\nul{\\n  list-style: none;\\n  columns: 2;\\n  -webkit-columns: 2;\\n  -moz-columns: 2;\\n}\\n\\n.card-title{\\n  font-size: 40px;\\n}\\n\\n*{\\n  font-family: helvetica;\\n  color: white;\\n}\\n\\n.card-buttons {\\n  text-align: center;\\n}\\n\\n.edit-button{\\n  background-color: #0d98ba;\\n  display: inline-block;\\n}\\n\\n.delete-button{\\n  background-color: red;\\n  display: inline-block;\\n}\\n\"","module.exports = \"<app-nav-bar-admin></app-nav-bar-admin>\\n\\n<div class=\\\"title-button\\\">\\n  <div class=\\\"title\\\" align=\\\"left\\\">\\n    <h1>Administración de Bloques de Registro</h1>\\n  </div>\\n  <div class=\\\"button\\\" align=\\\"right\\\">\\n    <button mat-raised-button class=\\\"create-button\\\">Crear Elección</button>\\n  </div>\\n</div>\\n\\n<mat-grid-list cols=\\\"1\\\" rowHeight=\\\"300px\\\" *ngFor=\\\"let bloque of arrDataBloques\\\">\\n    <mat-card *ngIf=\\\"bloque.type === 'csa'\\\" class=\\\"csa-card\\\">\\n      <mat-card-header>\\n        <mat-card-title class=\\\"card-title\\\">{{bloque.name}}</mat-card-title>\\n        <mat-card-subtitle>16/07/2018 9:00 AM - 6:00 PM</mat-card-subtitle>\\n      </mat-card-header>\\n      <mat-card-content>\\n        <p>Grupos a elección</p>\\n          <ul *ngFor=\\\"let grupo of bloque.gruposEstudiantiles\\\">\\n            <li>{{grupo}}<li>\\n          </ul>\\n      </mat-card-content>\\n      <mat-card-actions class=\\\"card-buttons\\\">\\n        <button mat-raised-button class=\\\"edit-button\\\">Editar</button>\\n        <button mat-raised-button class=\\\"delete-button\\\">Eliminar</button>\\n      </mat-card-actions>\\n    </mat-card>\\n\\n  <ng-template [ngIf]=\\\"bloque.type === 'care'\\\">\\n    <mat-card class=\\\"care-card\\\">\\n      <mat-card-header>\\n        <mat-card-title class=\\\"card-title\\\">{{bloque.name}}</mat-card-title>\\n        <mat-card-subtitle>16/07/2018 9:00 AM - 6:00 PM</mat-card-subtitle>\\n      </mat-card-header>\\n      <mat-card-content>\\n        <p>Grupos a elección</p>\\n          <ul *ngFor=\\\"let grupo of bloque.gruposEstudiantiles\\\">\\n            <li>{{grupo}}<li>\\n          </ul>\\n      </mat-card-content>\\n      <mat-card-actions class=\\\"card-buttons\\\">\\n        <button mat-raised-button class=\\\"edit-button\\\">Editar</button>\\n        <button mat-raised-button class=\\\"delete-button\\\">Eliminar</button>\\n      </mat-card-actions>\\n    </mat-card>\\n  </ng-template>\\n\\n  <ng-template [ngIf]=\\\"bloque.type === 'ejecutivo'\\\">\\n    <mat-card class=\\\"ejecutivo-card\\\">\\n      <mat-card-header>\\n        <mat-card-title class=\\\"card-title\\\">{{bloque.name}}</mat-card-title>\\n        <mat-card-subtitle>16/07/2018 9:00 AM - 6:00 PM</mat-card-subtitle>\\n      </mat-card-header>\\n      <mat-card-content>\\n        <p>Grupos a elección</p>\\n          <ul *ngFor=\\\"let grupo of bloque.gruposEstudiantiles\\\">\\n            <li>{{grupo}}<li>\\n          </ul>\\n      </mat-card-content>\\n      <mat-card-actions class=\\\"card-buttons\\\">\\n        <button mat-raised-button class=\\\"edit-button\\\">Editar</button>\\n        <button mat-raised-button class=\\\"delete-button\\\">Eliminar</button>\\n      </mat-card-actions>\\n    </mat-card>\\n  </ng-template>\\n</mat-grid-list>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AngularFireDatabase } from \"@angular/fire/database\";\nimport {FormControl, FormGroupDirective, NgForm, Validators} from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-admin-bloques-registro',\n  templateUrl: './admin-bloques-registro.component.html',\n  styleUrls: ['./admin-bloques-registro.component.css']\n})\nexport class AdminBloquesRegistroComponent implements OnInit {\n\n  nombreBloque : string;\n  arrDataBloques : Array<any> = [];\n  estado : string; // para validar si el bloque esta activo para recivir registros o no\n  type: string;\n\n  constructor(private db : AngularFireDatabase, private router : Router) { }\n\n  ngOnInit() {\n    this.fetchBloques();\n  }\n\n  fetchBloques(){\n    this.db.database.ref(`Bloques de registro/2018/Ago-Dic`).once('value').then(snap=>{\n      snap.forEach(element => {\n        var arrGruposEstudiantiles : Array<string> = []\n        this.nombreBloque = element.val().name\n        this.type = element.val().type\n        this.db.database.ref(`Bloques de registro/2018/Ago-Dic/${this.nombreBloque}/Elecciones`).once('value').then(snap=>{\n          snap.forEach(element => {\n            arrGruposEstudiantiles.push(element.val().name)\n          });\n        });\n         this.arrDataBloques.push({name: this.nombreBloque, type: this.type, gruposEstudiantiles: arrGruposEstudiantiles})\n         console.log(this.arrDataBloques)\n      });\n    });\n  }\n\n\n}\n","module.exports = \".center {\\n    margin: auto;\\n    width: 50%;\\n    padding: 10px;\\n}\\n\\ninput{\\n    /* background-color:#673ab7; */\\n    color: black;\\n    font-family: Roboto,\\\"Helvetica Neue\\\",sans-serif;\\n    margin: 20px;\\n    font-size: 15px;\\n}\\n\\ninput[type=\\\"file\\\" i]{\\n    color:gray;\\n}\\n\\n.upload-btn-wrapper {\\n    position: relative;\\n    overflow: hidden;\\n    display: inline-block;\\n  }\\n\\n.btn {\\n    \\n    color: white;\\n    background-color: gray;\\n    padding: 8px 20px;\\n    font-size: 15px;\\n  }\\n\\n.upload-btn-wrapper input[type=file] {\\n    font-size: 100px;\\n    position: absolute;\\n    left: 0;\\n    opacity: 0;\\n  }\"","module.exports = \"<app-nav-bar-admin></app-nav-bar-admin>\\n<div class=\\\"container center\\\">\\n        <div class=\\\"upload-btn-wrapper\\\">\\n                <button class=\\\"btn\\\">Upload a file</button>\\n                <input type=\\\"file\\\" style=\\\"display: inline-block;\\\" (change)=\\\"incomingfile($event)\\\" placeholder=\\\"Upload file\\\" accept=\\\".xlsx\\\">\\n              </div>\\n        <button style=\\\"position: absolute; display: block;\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"Upload()\\\">Upload</button>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport * as XLSX from 'ts-xlsx';\nimport { AngularFireDatabase } from '@angular/fire/database'\n\n@Component({\n  selector: 'app-admin-db',\n  templateUrl: './admin-db.component.html',\n  styleUrls: ['./admin-db.component.css']\n})\nexport class AdminDbComponent implements OnInit {\n  arrayBuffer : any;\n  filteredData = [];\n  file:File;\n  excelData : any;\n\nincomingfile(event) \n  {\n  this.file= event.target.files[0]; \n  }\n\n Upload() {\n      let fileReader = new FileReader();\n        fileReader.onload = (e) => {\n            this.arrayBuffer = fileReader.result;\n            var data = new Uint8Array(this.arrayBuffer);\n            var arr = new Array();\n            for(var i = 0; i != data.length; ++i) arr[i] = String.fromCharCode(data[i]);\n            var bstr = arr.join(\"\");\n            var workbook = XLSX.read(bstr, {type:\"binary\"});\n            var first_sheet_name = workbook.SheetNames[0];\n            var worksheet = workbook.Sheets[first_sheet_name];\n          this.filterData(XLSX.utils.sheet_to_json(worksheet,{raw:true}))\n        }\n        fileReader.readAsArrayBuffer(this.file);\n}\n\nfilterData(excelData){\n  excelData.forEach(element => {\n    this.filteredData[element.matricula]={\n      fname : `${element.Nombre} ${element.ApPaterno} ${element.ApMaterno}`,\n      major : element.DescMajor,\n      state : element.Estado\n    }\n  });\n  this.db.database.ref('database/').set(this.filteredData);\n}\n\n\n  constructor(private db:AngularFireDatabase) { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"p {\\n  font-family: helvetica;\\n  font-weight: 900;\\n  font-size: 40px;\\n}\\n\\n.title-button{\\n  display: block;\\n  width: 100%;\\n}\\n\\n.title{\\n  display: inline-block;\\n  padding-left: 20px;\\n}\\n\\n.button{\\n  padding-right: 20px;\\n}\\n\\n.create-button{\\n  background-color: #198C19;\\n  color: white;\\n}\\n\"","module.exports = \"<app-nav-bar-admin></app-nav-bar-admin>\\n\\n<div class=\\\"title-button\\\">\\n  <div class=\\\"title\\\" align=\\\"left\\\">\\n    <p>Administración de Elecciones<p>\\n  </div>\\n  <div class=\\\"button\\\" align=\\\"right\\\">\\n    <button mat-raised-button class=\\\"create-button\\\">Crear Elección</button>\\n  </div>\\n</div>\\n<app-elecciones-grid></app-elecciones-grid>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { DatabaseService } from '../../../services/database.service';\n\n@Component({\n  selector: 'app-dashboard-elecciones',\n  templateUrl: './dashboard-elecciones.component.html',\n  styleUrls: ['./dashboard-elecciones.component.css']\n})\nexport class DashboardEleccionesComponent implements OnInit {\n\n  constructor(private databaseService: DatabaseService) { }\n\n  ngOnInit() {\n     this.databaseService.getElecciones().subscribe(elecciones => {\n      console.log(elecciones);\n    });\n  }\n\n}\n","module.exports = \".eleccion-card{\\n  max-width: 500px;\\n  background: linear-gradient(to top left, #702082 38%, #993399 100%);\\n}\\n\\np{\\n  font-size: 20px;\\n}\\n\\nul{\\n  list-style: none;\\n  columns: 2;\\n  -webkit-columns: 2;\\n  -moz-columns: 2;\\n}\\n\\n.card-title{\\n  font-size: 40px;\\n}\\n\\n*{\\n  font-family: helvetica;\\n  color: white;\\n}\\n\\n.card-buttons {\\n  text-align: center;\\n}\\n\\n.edit-button{\\n  background-color: #0d98ba;\\n  display: inline-block;\\n}\\n\\n.delete-button{\\n  background-color: red;\\n  display: inline-block;\\n}\\n\"","module.exports = \"<mat-card class=\\\"eleccion-card\\\">\\n  <mat-card-header>\\n    <mat-card-title class=\\\"card-title\\\" >Bloque 1</mat-card-title>\\n    <mat-card-subtitle>16/07/2018 9:00 AM - 6:00 PM</mat-card-subtitle>\\n  </mat-card-header>\\n  <mat-card-content>\\n    <p>Grupos a elección</p>\\n      <ul>\\n        <li>Ing. en Tecno. Computacionales<li>\\n        <li>Lic. en Economía<li>\\n        <li>Arquitecto</li>\\n        <li>Ing. Industrial y de Sistemas</li>\\n        <li>Lic. en Comunicación y Med Dig</li>\\n        <li>Lic. en Relaciones Internacion</li>\\n        <li>Ing. en Innovación y Desarrollo</li>\\n        <li>Lic. en Comunicación y Med Dig</li>\\n      </ul>\\n  </mat-card-content>\\n  <mat-card-actions class=\\\"card-buttons\\\">\\n    <button mat-raised-button class=\\\"edit-button\\\">Editar</button>\\n    <button mat-raised-button class=\\\"delete-button\\\">Eliminar</button>\\n  </mat-card-actions>\\n</mat-card>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-eleccion-card',\n  templateUrl: './eleccion-card.component.html',\n  styleUrls: ['./eleccion-card.component.css']\n})\nexport class EleccionCardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<mat-grid-list cols=\\\"4\\\" rowHeight=\\\"400px\\\">\\n  <mat-grid-tile>\\n      <app-eleccion-card></app-eleccion-card>\\n  </mat-grid-tile>\\n  <mat-grid-tile>\\n      <app-eleccion-card></app-eleccion-card>\\n  </mat-grid-tile>\\n  <mat-grid-tile>\\n      <app-eleccion-card></app-eleccion-card>\\n  </mat-grid-tile>\\n  <mat-grid-tile>\\n      <app-eleccion-card></app-eleccion-card>\\n  </mat-grid-tile>\\n</mat-grid-list>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-elecciones-grid',\n  templateUrl: './elecciones-grid.component.html',\n  styleUrls: ['./elecciones-grid.component.css']\n})\nexport class EleccionesGridComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"table {\\n\\twidth: 100%;\\n}\"","module.exports = \"<app-nav-bar-admin></app-nav-bar-admin>\\n\\n<div id=\\\"title\\\">\\n\\t<h1>Registro de candidaturas</h1>\\n</div>\\n\\n<div id=\\\"consejos\\\">\\n\\t<button mat-raised-button>CSA</button>\\n\\t<button mat-raised-button>CARE</button>\\n\\t<button mat-raised-button>General</button>\\n</div>\\n\\n<div id=\\\"bloques\\\">\\n\\t<button mat-raised-button>Bloque 1</button>\\n\\t<button mat-raised-button>Bloque 2</button>\\n\\t<button mat-raised-button>Bloque 3</button>\\n</div>\\n\\n<h2>Bloque 1</h2>\\n\\n<div id=\\\"candidaturas\\\">\\n\\t<table mat-table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">\\n\\t\\t<!-- Columna: número de candidatura (id) -->\\n\\t\\t<ng-container matColumnDef=\\\"numCandidatura\\\">\\n\\t\\t\\t<th mat-header-cell *matHeaderCellDef> N&uacute;mero de candidatura </th>\\n\\t\\t\\t<td mat-cell *matCellDef=\\\"let element\\\"> {{element.numCandidatura}} </td>\\n\\t\\t</ng-container>\\n\\n\\t\\t<!-- Columna: grupo estudiantil al que se aplica -->\\n\\t\\t<ng-container matColumnDef=\\\"grupoEstudiantil\\\">\\n\\t\\t\\t<th mat-header-cell *matHeaderCellDef> Grupo estudiantil </th>\\n\\t\\t\\t<td mat-cell *matCellDef=\\\"let element\\\"> {{element.grupoEstudiantil}} </td>\\n\\t\\t</ng-container>\\n\\n\\t\\t<!-- Columna: nombre de la candidatura -->\\n\\t\\t<ng-container matColumnDef=\\\"nombreCandidatura\\\">\\n\\t\\t\\t<th mat-header-cell *matHeaderCellDef> Nombre de candidatura </th>\\n\\t\\t\\t<td mat-cell *matCellDef=\\\"let element\\\"> {{element.nombreCandidatura}} </td>\\n\\t\\t</ng-container>\\n\\n\\t\\t<!-- Columna: estatus de la candidatura -->\\n\\t\\t<ng-container matColumnDef=\\\"estatusCandidatura\\\">\\n\\t\\t\\t<th mat-header-cell *matHeaderCellDef> Estatus </th>\\n\\t\\t\\t<td mat-cell *matCellDef=\\\"let element\\\"> {{element.estatusCandidatura}} </td>\\n\\t\\t</ng-container>\\n\\n\\t\\t<!-- Columna: estatus de la candidatura -->\\n\\t\\t<ng-container matColumnDef=\\\"detalleCandidatura\\\">\\n\\t\\t\\t<th mat-header-cell *matHeaderCellDef> Detalle </th>\\n\\t\\t\\t<td mat-cell *matCellDef=\\\"let element\\\"> {{element.detalleCandidatura}} </td>\\n\\t\\t</ng-container>\\n\\n\\t\\t<tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n\\t\\t\\t<tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n\\t</table>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\nexport interface Candidaturas {\n\tnumCandidatura: number;\n\tgrupoEstudiantil: string;\n\tnombreCandidatura: string;\n\testatusCandidatura: string;\n\tdetalleCandidatura: string; // esto más bien depende de cómo lo quieren guardar/manejar\n  }\n\n// Datos estáticos, cambiar cuando lo conecten con el backend.\n// @Poncho: ¿nos puedes explicar los valores posibles de estatus?\nconst ELEMENT_DATA: Candidaturas[] = [\n\t{numCandidatura: 1, grupoEstudiantil: 'Sociedad de Alumnos de ITC', nombreCandidatura: 'Switch', estatusCandidatura: 'Cancelado', detalleCandidatura: 'TBD'},\n\t{numCandidatura: 2, grupoEstudiantil: 'Sociedad de Alumnos de INT', nombreCandidatura: 'All Possible', estatusCandidatura: 'Modificación', detalleCandidatura: 'TBD'},\n\t{numCandidatura: 3, grupoEstudiantil: 'Sociedad de Alumnos de I2D', nombreCandidatura: 'Reinventa', estatusCandidatura: 'Baja', detalleCandidatura: 'TBD'},\n\t{numCandidatura: 4, grupoEstudiantil: 'Sociedad de Alumnos de ITC', nombreCandidatura: 'Reboot', estatusCandidatura: 'Aceptado', detalleCandidatura: 'TBD'},\n\t{numCandidatura: 5, grupoEstudiantil: 'Sociedad de Alumnos de INT', nombreCandidatura: 'SAINTs', estatusCandidatura: 'Esperando revisión', detalleCandidatura: 'TBD'},\n];\n\n@Component({\n  selector: 'app-admin-registros',\n  templateUrl: './admin-registros.component.html',\n  styleUrls: ['./admin-registros.component.css']\n})\n\nexport class AdminRegistrosComponent implements OnInit {\n\tdisplayedColumns: string[] = ['numCandidatura', 'grupoEstudiantil', 'nombreCandidatura', 'estatusCandidatura', 'detalleCandidatura'];\n\tdataSource = ELEMENT_DATA;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<app-nav-bar-admin></app-nav-bar-admin>\\n\\n<!-- El usuario selecciona el año, periodo académico y elección que requiera consultar. -->\\n<mat-form-field>\\n\\t<mat-select [(value)]=\\\"selectedYear\\\" placeholder=\\\"A&ntilde;o\\\">\\n\\t\\t<mat-option>None</mat-option>\\n\\t\\t<mat-option value=\\\"option1\\\">2018</mat-option>\\n\\t\\t<mat-option value=\\\"option2\\\">2017</mat-option>\\n\\t\\t<mat-option value=\\\"option3\\\">2016</mat-option>\\n\\t</mat-select>\\n</mat-form-field>\\n\\n<mat-form-field>\\n\\t<mat-select [(value)]=\\\"selectedSemester\\\" placeholder=\\\"Semestre\\\">\\n\\t\\t<mat-option>None</mat-option>\\n\\t\\t<mat-option value=\\\"option1\\\">Ene-May</mat-option>\\n\\t\\t<mat-option value=\\\"option2\\\">Ago-Dic</mat-option>\\n\\t</mat-select>\\n</mat-form-field>\\n\\n<mat-form-field>\\n\\t<mat-select [(value)]=\\\"selectedElection\\\" placeholder=\\\"Tipo de elecci&oacute;n\\\">\\n\\t\\t<mat-option>None</mat-option>\\n\\t\\t<mat-option value=\\\"option1\\\">Sociedades de alumnos</mat-option>\\n\\t\\t<mat-option value=\\\"option2\\\">Asociaciones regionales y extranjeras</mat-option>\\n\\t\\t<mat-option value=\\\"option3\\\">Elecci&oacute;n general</mat-option>\\n\\t</mat-select>\\n</mat-form-field>\\n\\n<!-- El usuario selecciona la carrera, estado o grupo estudiantil que requiera consultar. -->\\n\\n\\t  \\n\\n<!-- El sistema presenta al usuario con un dashboard con los resultados  de la participación estudiantil en la elección seleccionada. -->\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin-resultados',\n  templateUrl: './admin-resultados.component.html',\n  styleUrls: ['./admin-resultados.component.css']\n})\nexport class AdminResultadosComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"table {\\n\\twidth: 100%;\\n}\"","module.exports = \"<app-nav-bar-admin></app-nav-bar-admin>\\n\\n<div id=\\\"title\\\">\\n\\t<h1>Administraci&oacute;n de roles</h1>\\n</div>\\n\\n<div id=\\\"filtro-tipo-usuario\\\">\\n\\t<button mat-raised-button>Administrador</button>\\n\\t<button mat-raised-button>Asesor</button>\\n</div>\\n\\n<button mat-fab color=\\\"primary\\\" id=\\\"agregar-rol\\\">+</button>\\n\\n<div id=\\\"resultados\\\">\\n\\t<table mat-table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">\\n\\t\\t<!-- Columna: matrícula del usuario -->\\n\\t\\t<ng-container matColumnDef=\\\"matricula\\\">\\n\\t\\t\\t<th mat-header-cell *matHeaderCellDef> Matr&iacute;cula </th>\\n\\t\\t\\t<td mat-cell *matCellDef=\\\"let element\\\"> {{element.matricula}} </td>\\n\\t\\t</ng-container>\\n\\n\\t\\t<!-- Columna: nombre del usuario -->\\n\\t\\t<ng-container matColumnDef=\\\"nombre\\\">\\n\\t\\t\\t<th mat-header-cell *matHeaderCellDef> Nombre </th>\\n\\t\\t\\t<td mat-cell *matCellDef=\\\"let element\\\"> {{element.nombre}} </td>\\n\\t\\t</ng-container>\\n\\n\\t\\t<!-- Columna: tipo de rol del usuario -->\\n\\t\\t<ng-container matColumnDef=\\\"rol\\\">\\n\\t\\t\\t<th mat-header-cell *matHeaderCellDef> Rol asignado </th>\\n\\t\\t\\t<td mat-cell *matCellDef=\\\"let element\\\"> {{element.rol}} </td>\\n\\t\\t</ng-container>\\n\\n\\t\\t<tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n  \\t\\t<tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n\\t</table>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\nexport interface ResultadosUsuarios {\n\tmatricula: string;\n\tnombre: string;\n\trol: string;\n  }\n\n// Datos estáticos, cambiar cuando lo conecten con el backend.\nconst ELEMENT_DATA: ResultadosUsuarios[] = [\n\t{matricula: 'A00816715', nombre: 'Melissa Janet Treviño Caballero', rol: 'Administrador'},\n\t{matricula: 'A00816715', nombre: 'Melissa Janet Treviño Caballero', rol: 'Administrador'},\n\t{matricula: 'A00816715', nombre: 'Melissa Janet Treviño Caballero', rol: 'Administrador'},\n\t{matricula: 'A00816715', nombre: 'Melissa Janet Treviño Caballero', rol: 'Administrador'},\n\t{matricula: 'A00816715', nombre: 'Melissa Janet Treviño Caballero', rol: 'Administrador'},\n\t{matricula: 'A00816715', nombre: 'Melissa Janet Treviño Caballero', rol: 'Administrador'},\n\t{matricula: 'A00816715', nombre: 'Melissa Janet Treviño Caballero', rol: 'Administrador'},\n\t{matricula: 'A00816715', nombre: 'Melissa Janet Treviño Caballero', rol: 'Administrador'},\n\t{matricula: 'A00816715', nombre: 'Melissa Janet Treviño Caballero', rol: 'Administrador'},\n\t{matricula: 'A00816715', nombre: 'Melissa Janet Treviño Caballero', rol: 'Administrador'},\n\t{matricula: 'A00816715', nombre: 'Melissa Janet Treviño Caballero', rol: 'Administrador'},\n\t{matricula: 'A00816715', nombre: 'Melissa Janet Treviño Caballero', rol: 'Administrador'},\n];\n\n@Component({\n  selector: 'app-admin-roles',\n  templateUrl: './admin-roles.component.html',\n  styleUrls: ['./admin-roles.component.css']\n})\nexport class AdminRolesComponent implements OnInit {\n\tdisplayedColumns: string[] = ['matricula', 'nombre', 'rol'];\n\tdataSource = ELEMENT_DATA;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".eleccion-card{\\n    max-width: 500px;\\n    background: linear-gradient(to top left, #616161 38%, #9E9E9E 100%);\\n  }\\n  \\n  p{\\n    font-size: 20px;\\n  }\\n  \\n  ul{\\n    list-style: none;\\n    columns: 2;\\n    -webkit-columns: 2;\\n    -moz-columns: 2;\\n  }\\n  \\n  .card-title{\\n    font-size: 40px;\\n  }\\n  \\n  *{\\n    font-family: helvetica;\\n    color: white;\\n  }\\n  \\n  .card-buttons {\\n    text-align: center;\\n  }\\n  \\n  .edit-button{\\n    background-color: #212121;\\n    display: inline-block;\\n  }\\n  \\n  .delete-button{\\n    background-color: red;\\n    display: inline-block;\\n  }\"","module.exports = \"<mat-card class=\\\"eleccion-card\\\">\\n  <mat-card-header>\\n    <mat-card-title class=\\\"card-title\\\" >Bloques</mat-card-title>\\n    <mat-card-subtitle>Bloques activas a eleccion</mat-card-subtitle>\\n  </mat-card-header>\\n  <mat-card-content>\\n    <p>Grupos a elección</p>\\n      <ul>\\n        <li>Ing. en Tecno. Computacionales<li>\\n        <li>Lic. en Economía<li>\\n        <li>Arquitecto</li>\\n        <li>Ing. Industrial y de Sistemas</li>\\n        <li>Lic. en Comunicación y Med Dig</li>\\n        <li>Lic. en Relaciones Internacion</li>\\n        <li>Ing. en Innovación y Desarrollo</li>\\n        <li>Lic. en Comunicación y Med Dig</li>\\n      </ul>\\n  </mat-card-content>\\n  <mat-card-actions class=\\\"card-buttons\\\">\\n    <button mat-raised-button class=\\\"edit-button\\\">Administrar</button>\\n  </mat-card-actions>\\n</mat-card>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin-card',\n  templateUrl: './admin-card.component.html',\n  styleUrls: ['./admin-card.component.css']\n})\nexport class AdminCardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"p {\\n    font-family: helvetica;\\n    font-weight: 900;\\n    font-size: 40px;\\n  }\\n  \\n  .title-button{\\n    display: block;\\n    width: 100%;\\n  }\\n  \\n  .title{\\n    display: inline-block;\\n    padding-left: 20px;\\n  }\\n  \\n  .button{\\n    padding-right: 20px;\\n  }\\n  \\n  .create-button{\\n    background-color: #198C19;\\n    color: white;\\n  }\\n  \"","module.exports = \"<app-nav-bar-admin></app-nav-bar-admin>\\n\\n<app-admin-grid></app-admin-grid>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin-dashboard',\n  templateUrl: './admin-dashboard.component.html',\n  styleUrls: ['./admin-dashboard.component.css']\n})\nexport class AdminDashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".bloque-card{\\n    width: 100%;\\n    height: 100%;\\n    max-width: 500px;\\n    max-height: 500px;\\n    background: linear-gradient(to top left, #616161 38%, #9E9E9E 100%);\\n}\\n\\n.grupo-card{\\n    width: 100%;\\n    height: 100%;\\n    max-width: 500px;\\n    max-height: 500px;\\n    max-width: 500px;\\n    background: linear-gradient(to top left, #BDBDBD 38%, #E0E0E0 100%);\\n}\\n\\n.grafica-card{\\n    width: 100%;\\n    height: 100%;\\n    max-width: 500px;\\n    max-height: 500px;\\n    background: linear-gradient(to top left, #616161 38%, #9E9E9E 100%);\\n}\\n\\np{\\n    font-size: 20px;    \\n}\\n\\nul{\\nlist-style: none;\\ncolumns: 2;\\n-webkit-columns: 2;\\n-moz-columns: 2;\\n}\\n\\n.card-title{\\nfont-size: 40px;\\n}\\n\\n*{\\nfont-family: helvetica;\\ncolor: white;\\n}\\n\\n.card-buttons {\\ntext-align: center;\\n}\\n\\n.edit-button{\\nbackground-color: #212121;\\ndisplay: inline-block;\\n}\\n\\n.delete-button{\\nbackground-color: red;\\ndisplay: inline-block;\\n}\\n\\ntable {\\n    width: 100%;\\n  }\"","module.exports = \"<mat-grid-list cols=\\\"3\\\" rowHeight=\\\"600px\\\">\\n  <mat-grid-tile>\\n    <mat-card class=\\\"bloque-card\\\">\\n      <mat-card-header>\\n        <mat-card-title class=\\\"card-title\\\" >Bloques</mat-card-title>\\n        <mat-card-subtitle>Bloques activos a eleccion</mat-card-subtitle>\\n      </mat-card-header>\\n              <table mat-table [dataSource]=\\\"bloques\\\" class=\\\"mat-elevation-z8\\\">\\n\\n                  <!--- Note that these columns can be defined in any order.\\n                        The actual rendered columns are set as a property on the row definition\\\" -->\\n\\n                  <!-- Name Column -->\\n                  <ng-container matColumnDef=\\\"name\\\">\\n                    <th mat-header-cell *matHeaderCellDef> <b style=\\\"color:black\\\">Nombre</b> </th>\\n                    <td mat-cell *matCellDef=\\\"let bloque\\\"> <p style=\\\"color:black\\\">{{bloque.name}}</p> </td>\\n                  </ng-container>\\n\\n                  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumnsBloques\\\"></tr>\\n                  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumnsBloques;\\\"(click)=\\\"selectRow(row)\\\"></tr>\\n                </table>\\n      <mat-card-actions class=\\\"card-buttons\\\">\\n        <button mat-raised-button class=\\\"edit-button\\\" (click)=\\\"openDialog()\\\">Añadir bloque</button>\\n      </mat-card-actions>\\n    </mat-card>\\n  </mat-grid-tile>\\n\\n  <mat-grid-tile>\\n    <mat-card class=\\\"grupo-card\\\">\\n      <mat-card-header>\\n        <mat-card-title class=\\\"card-title\\\" >Grupos</mat-card-title>\\n        <mat-card-subtitle>Grupos en el bloque: {{selectedBloque}}</mat-card-subtitle>\\n      </mat-card-header>\\n      <table mat-table [dataSource]=\\\"elecciones\\\" class=\\\"mat-elevation-z8\\\">\\n\\n          <!--- Note that these columns can be defined in any order.\\n                The actual rendered columns are set as a property on the row definition\\\" -->\\n\\n          <!-- Name Column -->\\n          <ng-container matColumnDef=\\\"name\\\">\\n            <th mat-header-cell *matHeaderCellDef> <b style=\\\"color:black\\\">Nombre</b> </th>\\n            <td mat-cell *matCellDef=\\\"let eleccion\\\"> <p style=\\\"color:black\\\">{{eleccion.name}}</p> </td>\\n          </ng-container>\\n\\n          <tr mat-header-row *matHeaderRowDef=\\\"displayedColumnsElecciones\\\"></tr>\\n          <tr mat-row *matRowDef=\\\"let row; columns: displayedColumnsElecciones;\\\"(click)=\\\"selectRow(row)\\\"></tr>\\n        </table>\\n      <mat-card-actions class=\\\"card-buttons\\\">\\n        <button mat-raised-button class=\\\"edit-button\\\" (click)=\\\"openDialogGrupos()\\\">Agregar Grupos</button>\\n      </mat-card-actions>\\n    </mat-card>\\n  </mat-grid-tile>\\n\\n  <mat-grid-tile>\\n      <mat-card class=\\\"grafica-card\\\">\\n        <div [chart]=\\\"chart\\\"></div>\\n    </mat-card>\\n  </mat-grid-tile>\\n\\n</mat-grid-list>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material';\nimport { EleccionDialogComponent } from '../../eleccion-dialog/eleccion-dialog.component'\nimport { Chart } from 'angular-highcharts';\n\nimport { BloqueDialogComponent } from '../../bloque-dialog/bloque-dialog.component'\nimport { AngularFireDatabase } from '@angular/fire/database'\nimport { forEach } from '@angular/router/src/utils/collection';\n@Component({\n  selector: 'app-admin-grid',\n  templateUrl: './admin-grid.component.html',\n  styleUrls: ['./admin-grid.component.css']\n})\nexport class AdminGridComponent implements OnInit {\n  result : string;\n  constructor(public dialog: MatDialog ,private db : AngularFireDatabase) { }\n  bloquesJson : any;\n  selectedBloque : string;\n  selectedGrupo : string;\n  bloques = [];\n  elecciones = [];\n  displayedColumnsBloques: string[] = ['name'];\n  displayedColumnsElecciones: string[] = ['name'];\n  chart = new Chart({\n    chart: {\n      type: 'bar'\n    },\n    title: {\n      text: 'Linechart'\n    },\n    credits: {\n      enabled: false\n    },\n    series: [\n      {\n        name: 'Carreras',\n        data: [1, 2, 3]\n      }\n    ]\n  });\n\n\n  ngOnInit() {\n    this.fetchInfo();\n  }\n\n  openDialog() {\n    let dialogRefBloque = this.dialog.open(BloqueDialogComponent, {\n      width: '600px',\n      data: {name: this.result}\n    });\n    dialogRefBloque.afterClosed().subscribe(result => {\n      this.db.database.ref(`2018Semestre2/${result.name}/`).set({\n        name : String(result.name),\n        startDate : String(result.startDate),\n        finishDate : String(result.finishDate),\n        type : String(result.type),\n        inProgress: true\n      })\n    });\n  }\n\n  openDialogGrupos(){\n    let dialogRefEleccion = this.dialog.open(EleccionDialogComponent, {\n      width: '600px',\n      data: {name: this.result}\n    });\n    dialogRefEleccion.afterClosed().subscribe(result => {\n      console.log(result);\n      this.result = result;\n\n      this.db.database.ref(`2018Semestre2/${this.selectedBloque}/Elecciones/${result.name}`).set({\n        name : String(result.name),\n        inProgress: true,\n        votos : 0,\n        carreras : result.carreras,\n      }).then(()=>{\n        this.fetchInfo();\n        this.refreshBloques();\n      })\n    });\n  }\n\n  selectRow(row){\n    this.elecciones = [];\n    this.selectedBloque = row.name;\n    if(this.bloquesJson[this.selectedBloque].Elecciones){\n      var elec = this.bloquesJson[row.name].Elecciones;\n      for (const key in elec) {\n        if (elec.hasOwnProperty(key)) {\n          this.elecciones.push({\n            name:key\n          });\n        }\n      }\n      console.log(this.elecciones);\n    }\n  }\n\n  fetchInfo(){\n    this.db.database.ref(\"2018Semestre2\").on(\"value\",(snap)=>{\n      this.bloquesJson = snap.val();\n      this.bloques = [];\n      snap.forEach((element)=>{\n        this.bloques.push({\n          name : element.key,\n          startDate : element.val().startDate,\n          finishDate : element.val().finishDate\n        })\n      })\n      console.log(this.bloques)\n    })\n  }\n\n  refreshBloques(){\n    if(this.bloquesJson[this.selectedBloque].Elecciones){\n      var elec = this.bloquesJson[this.selectedBloque].Elecciones;\n      for (const key in elec) {\n        if (elec.hasOwnProperty(key)) {\n          this.elecciones.push({\n            name:key\n          });\n        }\n      }\n      console.log(this.elecciones);\n    }\n  }\n\n}\n","module.exports = \"\"","module.exports = \"\\n<app-nav-bar></app-nav-bar>\\n<app-elecciones-grid></app-elecciones-grid>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin-home',\n  templateUrl: './admin-home.component.html',\n  styleUrls: ['./admin-home.component.css']\n})\nexport class AdminHomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".full-width {\\n    width: 100%;\\n  }\"","module.exports = \"\\n<strong>Agregar bloque</strong>\\n<br>\\n<mat-form-field class=\\\"full-width\\\">\\n  <input matInput placeholder=\\\"Nombre de bloque\\\" value=\\\"\\\" [(ngModel)]=\\\"nombre\\\">\\n</mat-form-field>\\n\\n<mat-form-field class=\\\"full-width\\\">\\n  <input matInput placeholder=\\\"Tipo (ex: csa)\\\" value=\\\"\\\" [(ngModel)]=\\\"type\\\">\\n</mat-form-field>\\n\\n<mat-form-field>\\n  <input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Choose a date\\\" [(ngModel)]=\\\"startDate\\\">\\n  <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n  <mat-datepicker #picker></mat-datepicker>\\n</mat-form-field>\\n\\n<mat-form-field>\\n  <input matInput [matDatepicker]=\\\"picker2\\\" placeholder=\\\"Choose a date\\\"[(ngModel)]=\\\"finishDate\\\">\\n  <mat-datepicker-toggle matSuffix [for]=\\\"picker2\\\"></mat-datepicker-toggle>\\n  <mat-datepicker #picker2></mat-datepicker>\\n</mat-form-field>\\n<br>\\n<button mat-raised-button color=\\\"primary\\\" (click)=\\\"agregarbloque()\\\">Agregar</button>\\n\"","import {Component,OnInit, Inject} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material\";\n\nexport interface DialogData {\n\n}\n\n\n@Component({\n  selector: 'app-bloque-dialog',\n  templateUrl: './bloque-dialog.component.html',\n  styleUrls: ['./bloque-dialog.component.css']\n})\nexport class BloqueDialogComponent implements OnInit {\n\n  startDate : \"\";\n  finishDate : \"\";\n  nombre : \"\";\n  type : \"\";\n\n  constructor(public dialogRef: MatDialogRef<BloqueDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public result: DialogData) { }\n\n\n  ngOnInit() {\n  }\n\n  agregarbloque(){\n    this.dialogRef.close({\n      name: this.nombre,\n      startDate : this.startDate,\n      finishDate : this.finishDate,\n      type: this.type\n    });\n\n  }\n\n}\n","module.exports = \".full-width {\\n    width: 100%;\\n  }\"","module.exports = \"\\n<strong>Agregar elección</strong>\\n<br>\\n<mat-form-field class=\\\"full-width\\\">\\n  <input matInput placeholder=\\\"Nombre de la elección\\\" value=\\\"\\\" [(ngModel)]=\\\"name\\\">\\n</mat-form-field>\\n\\n<mat-form-field>\\n  <mat-select placeholder=\\\"Carreras\\\" [formControl]=\\\"majorsFormControl\\\" multiple>\\n    <mat-option *ngFor=\\\"let major of majors\\\" [value]=\\\"major\\\">{{major}}</mat-option>\\n  </mat-select>\\n</mat-form-field>\\n\\n<br>\\n<button mat-raised-button color=\\\"primary\\\" (click)=\\\"agregareleccion()\\\">Agregar</button>\\n\"","import { Component, OnInit, Inject } from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material\";\nimport {FormControl, FormGroupDirective, NgForm, Validators} from '@angular/forms';\nimport { AngularFireDatabase } from \"@angular/fire/database\";\n\nexport interface DialogData {\n\n}\n\n@Component({\n  selector: 'app-eleccion-dialog',\n  templateUrl: './eleccion-dialog.component.html',\n  styleUrls: ['./eleccion-dialog.component.css']\n})\nexport class EleccionDialogComponent implements OnInit {\n\n  majorsFormControl = new FormControl();\n  name : \"\";\n  majors : Array<string> = [];\n  // selectedMajors : Array<string> =[];\n\n  constructor(public dialogRef: MatDialogRef<EleccionDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public result: DialogData, private db : AngularFireDatabase) { }\n\n  ngOnInit() {\n    this.fetchMajors();\n  }\n\n  fetchMajors(){\n    this.db.database.ref('majors').once('value').then(snap=>{\n      snap.forEach(element => {\n        this.majors.push(element.val().name)\n      })\n    })\n  }\n\n  agregareleccion(){\n    var arrElecciones = this.majorsFormControl.value\n    this.dialogRef.close({\n      name: this.name,\n      carreras: arrElecciones,\n    });\n\n  }\n\n}\n","module.exports = \".navbar {\\n}\\n\\n.button-row{\\n\\tdisplay: flex;\\n\\tjustify-content: flex-end;\\n}\\n\\n.navbar-brand {\\n  font-family: \\\"helvetica\\\";\\n  font-size: 20px;\\n  color: white;\\n  float: left;\\n  display: block;\\n  padding: 20px 20px;\\n}\\n\\n.container-fuid {\\n    list-style-type: none;\\n    margin: 0;\\n    padding: 0;\\n    overflow: hidden;\\n\\tbackground-color: #212121;\\n\\theight: 100px;\\n}\\n\\n.nabvar-button {\\n    display: block;\\n    color: white;\\n    text-align: center;\\n    padding: 30px 16px;\\n\\ttext-decoration: none;\\n\\tfont-weight: 300;\\n\\tletter-spacing: 3px;\\n\\tfont-size: 12px;\\n}\\n\\n.nabvar-button:hover{\\n  color: black;\\n  background-color: #FFFFFF;\\n}\\n\\na ul{\\n  display: block;\\n  color: white;\\n  text-align: center;\\n  padding: 14px 16px;\\n  text-decoration: none;\\n}\\n\\n/* li a:hover {\\n    background-color: white;\\n    color: black;\\n} */\\n\\n.nabvar-logout-button{\\n  display: block;\\n  color: white;\\n  text-align: center;\\n  padding: 5px 22px;\\n  margin-right: 14px;\\n  margin-top: 25px;\\n  text-decoration: none;\\n  border-radius: 50px;\\n  border-width: 2.5px;\\n  font-weight: 300;\\n  letter-spacing: 3px;\\n  font-size: 12px;\\n  height: 50px;\\n}\\n\\n.nabvar-round-button{\\n  display: block;\\n  color: white;\\n  text-align: center;\\n  padding: 5px 20px;\\n  margin-right: 14px;\\n  margin-top: 5px;\\n  text-decoration: none;\\n  border: 2px solid white;\\n  border-radius: 300px;\\n}\\n\\n.nabvar-round-button:hover{\\n  color: black;\\n  border-radius: 300px;\\n  background-color: #FFFFFF;\\n}\\n\"","module.exports = \"<nav class=\\\"navbar nabbar-default\\\">\\n  <div class=\\\"container-fuid\\\">\\n    <div>\\n      <a class=\\\"navbar-brand\\\">COMIT&Eacute; <br> ELECTORAL <br> FEITESM</a>\\n    </div>\\n\\n    <!-- MARK: Displayed only when ADMIN session is stablished -->\\n\\n\\t<div class=\\\"button-row\\\">\\n\\t\\t<button class=\\\"nabvar-button\\\" mat-button routerLink=\\\"/admin/home\\\">HOME</button>\\n\\n    <!-- <button class=\\\"nabvar-button\\\" mat-button [matMenuTriggerFor]=\\\"elecciones\\\">ELECCIONES</button>\\n\\t\\t<mat-menu #elecciones=\\\"matMenu\\\" overlapTrigger=\\\"false\\\">\\n\\t\\t  <button mat-menu-item routerLink=\\\"/admin/admin-elecciones\\\">Administraci&oacute;n de elecciones</button>\\n\\t\\t  <button mat-menu-item routerLink=\\\"/admin/admin-resultados\\\">Resultados</button>\\n\\t\\t</mat-menu> -->\\n\\n\\t\\t<button class=\\\"nabvar-button\\\" mat-button [matMenuTriggerFor]=\\\"registros\\\">REGISTROS</button>\\n\\t\\t<mat-menu #registros=\\\"matMenu\\\" overlapTrigger=\\\"false\\\">\\n\\t\\t\\t<button mat-menu-item routerLink=\\\"/admin/admin-bloquesRegistro\\\">Administraci&oacute;n de bloques de registros</button>\\n\\t\\t  <button mat-menu-item routerLink=\\\"/admin/admin-registros\\\">Tabla de registros</button>\\n\\t\\t</mat-menu>\\n\\n\\t\\t<button class=\\\"nabvar-button\\\" mat-button [matMenuTriggerFor]=\\\"alumnos\\\">USUARIOS</button>\\n\\t\\t<mat-menu #alumnos=\\\"matMenu\\\" overlapTrigger=\\\"false\\\">\\n\\t\\t  <button mat-menu-item routerLink=\\\"/admin/admin-db\\\">Administraci&oacute;n de base de datos</button>\\n\\t\\t  <button mat-menu-item routerLink=\\\"/admin/users\\\">Roles de usuario</button>\\n\\t\\t</mat-menu>\\n\\n\\t\\t<button class=\\\"nabvar-logout-button\\\" mat-stroked-button (click)=\\\"logout()\\\">CERRAR SESI&Oacute;N</button>\\n\\t</div>\\n\\n  </div>\\n</nav>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-nav-bar-admin',\n  templateUrl: './nav-bar-admin.component.html',\n  styleUrls: ['./nav-bar-admin.component.css']\n})\nexport class NavBarAdminComponent implements OnInit {\n\n  constructor(private auth : AngularFireAuth, private router : Router) { }\n\n  ngOnInit() {\n  }\n\n  logout(){\n    this.auth.auth.signOut().then(()=>{\n      this.router.navigateByUrl('login');\n    })\n  }\n\n\n}\n","module.exports = \".full-width {\\n    width: 100%;\\n  }\"","module.exports = \"<strong>Agregar Rol</strong>\\n<br>\\n\\n<div *ngIf=\\\"newUser === true; else newUserCard\\\">\\n  <mat-form-field class=\\\"full-width\\\">\\n    <input matInput placeholder=\\\"Nombre\\\" disabled value=\\\"\\\" [(ngModel)]=\\\"nombre\\\">\\n  </mat-form-field>\\n\\n  <mat-form-field class=\\\"full-width\\\">\\n      <input matInput placeholder=\\\"Matricula\\\" disabled value=\\\"\\\" [(ngModel)]=\\\"matricula\\\">\\n  </mat-form-field>\\n\\n  <mat-form-field class=\\\"full-width\\\">\\n      <input matInput placeholder=\\\"Major\\\" disabled value=\\\"\\\" [(ngModel)]=\\\"major\\\">\\n  </mat-form-field>\\n\\n  <mat-form-field class=\\\"full-width\\\">\\n      <input matInput placeholder=\\\"Estado\\\" disabled value=\\\"\\\" [(ngModel)]=\\\"estado\\\">\\n  </mat-form-field>\\n\\n  <mat-form-field>\\n      <mat-select [(value)]=\\\"selectedRol\\\" placeholder=\\\"Roles\\\">\\n        <mat-option *ngFor=\\\"let rol of roles\\\" [value]=\\\"rol.value\\\">\\n          {{rol.viewValue}}\\n        </mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n\\n  <br>\\n  <button mat-raised-button color=\\\"primary\\\" (click)=\\\"agregarRol()\\\">Agregar</button>\\n\\n</div>\\n\\n<ng-template #newUserCard>\\n  <mat-form-field class=\\\"full-width\\\">\\n    <input matInput placeholder=\\\"Nombre\\\"  value=\\\"\\\" [(ngModel)]=\\\"nombre\\\">\\n  </mat-form-field>\\n\\n  <mat-form-field class=\\\"full-width\\\">\\n      <input matInput placeholder=\\\"Matricula\\\"  value=\\\"\\\" [(ngModel)]=\\\"matricula\\\">\\n  </mat-form-field>\\n\\n  <mat-form-field class=\\\"full-width\\\">\\n      <input matInput placeholder=\\\"Major\\\"  value=\\\"\\\" [(ngModel)]=\\\"major\\\">\\n  </mat-form-field>\\n\\n  <mat-form-field class=\\\"full-width\\\">\\n      <input matInput placeholder=\\\"Estado\\\"  value=\\\"\\\" [(ngModel)]=\\\"estado\\\">\\n  </mat-form-field>\\n\\n  <mat-form-field>\\n      <mat-select [(ngModel)]=\\\"selectedRol\\\" placeholder=\\\"Roles\\\">\\n        <mat-option *ngFor=\\\"let rol of roles\\\" [value]=\\\"rol.value\\\">\\n          {{rol.viewValue}}\\n        </mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n\\n  <br>\\n  <button mat-raised-button color=\\\"primary\\\" (click)=\\\"agregarRol()\\\">Agregar</button>\\n\\n</ng-template>\\n\"","import { Component, OnInit, Inject } from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material\";\nimport { AngularFireDatabase } from \"@angular/fire/database\";\nexport interface DialogData {\n\n}\n\n@Component({\n  selector: 'app-add-role-dialog',\n  templateUrl: './add-role-dialog.component.html',\n  styleUrls: ['./add-role-dialog.component.css']\n})\nexport class AddRoleDialogComponent implements OnInit {\n\n  nombre : string;\n  matricula : string;\n  major : string;\n  estado : string;\n  selectedRol : string;\n  newUser : boolean;\n  roles: any[] = [\n    {value: 'admin', viewValue: 'Admin'},\n    {value: 'asesor', viewValue: 'Asesor'},\n    {value: 'usuario', viewValue: 'Usuario'}\n  ];\n\n  constructor(public dialogRef: MatDialogRef<AddRoleDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public result: DialogData, private db : AngularFireDatabase) { }\n\n  ngOnInit() {\n    console.log(this.result)\n    this.newUser = this.result['newUser'];\n    if(this.newUser === true){\n      this.nombre = this.result['row']['fname'];\n      this.matricula = this.result['row']['key'];\n      this.major = this.result['row']['major'];\n      this.estado = this.result['row']['state'];\n      this.selectedRol = this.result['row']['role'];\n    }\n\n  }\n\n  agregarRol(){\n    console.log(this.selectedRol);\n    if(this.newUser === true){\n      if (this.selectedRol) {\n        this.db.database.ref(`roles/${this.matricula}`).set({\n          key : this.matricula,\n          fname : this.nombre,\n          major : this.major,\n          role : this.selectedRol,\n          state : this.estado\n        })\n        this.db.database.ref(`database/${this.matricula}`).update({roll:this.selectedRol});\n        this.dialogRef.close({\n        });\n      }else{\n        alert(\"Debe seleccionar un rol\");\n      }\n    }else{\n      // this.matricula = document.getElementById('matricula').value;\n      // this.nombre = document.getElementById('nombre').value;\n      // this.major = document.getElementById('major').value;\n      //this.selectedRol = document.getElementById('').value;\n      // this.estado = document.getElementById('estado').value;\n\n      this.db.database.ref(`roles/${this.matricula}`).set({\n        key : this.matricula,\n        fname : this.nombre,\n        major : this.major,\n        role : this.selectedRol,\n        state : this.estado\n      })\n\n      this.db.database.ref(`database/${this.matricula}`).set({\n        key : this.matricula,\n        fname : this.nombre,\n        major : this.major,\n        roll : this.selectedRol,\n        state : this.estado\n      })\n\n      this.dialogRef.close({\n      });\n    }\n  }\n\n}\n","module.exports = \".table{\\n    margin: auto;\\n    width: 90%;\\n}\"","module.exports = \"<app-nav-bar-admin></app-nav-bar-admin>\\n\\n<mat-tab-group>\\n    <mat-tab label=\\\"BD Alumnos\\\">\\n        <mat-form-field style=\\\"margin-left: 5%\\\">\\n            <input matInput (keyup)=\\\"applyFilterUsers($event.target.value)\\\" placeholder=\\\"Buscar\\\">\\n          </mat-form-field>\\n\\n          <button style=\\\"float: right; margin-right: 80px; background-color: green; color: white\\\" mat-fab matTooltip=\\\"Agregar nuevo usuario\\\" matTooltipPosition=\\\"before\\\" (click)=\\\"openDialog(row,false)\\\">+</button>\\n\\n          <table mat-table [dataSource]=\\\"dataSourceUsers\\\" class=\\\"table mat-elevation-z8\\\">\\n            <!-- Matricula Column -->\\n            <ng-container matColumnDef=\\\"key\\\">\\n              <th mat-header-cell *matHeaderCellDef> Matricula </th>\\n              <td mat-cell *matCellDef=\\\"let user\\\"> {{user.key}} </td>\\n            </ng-container>\\n\\n            <!-- Name Column -->\\n            <ng-container matColumnDef=\\\"fname\\\">\\n              <th mat-header-cell *matHeaderCellDef> Nombre </th>\\n              <td mat-cell *matCellDef=\\\"let user\\\"> {{user.fname}} </td>\\n            </ng-container>\\n\\n            <!-- Major Column -->\\n            <ng-container matColumnDef=\\\"major\\\">\\n              <th mat-header-cell *matHeaderCellDef> Major </th>\\n              <td mat-cell *matCellDef=\\\"let user\\\"> {{user.major}} </td>\\n            </ng-container>\\n\\n            <!-- Role Column -->\\n            <ng-container matColumnDef=\\\"role\\\">\\n              <th mat-header-cell *matHeaderCellDef> Rol </th>\\n              <td mat-cell *matCellDef=\\\"let user\\\"> {{user.role}} </td>\\n            </ng-container>\\n\\n            <!-- State Column -->\\n            <ng-container matColumnDef=\\\"state\\\">\\n                <th mat-header-cell *matHeaderCellDef> Estado </th>\\n                <td mat-cell *matCellDef=\\\"let user\\\"> {{user.state}} </td>\\n            </ng-container>\\n\\n            <tr mat-header-row *matHeaderRowDef=\\\"displayedColumnsUsers\\\"></tr>\\n            <tr mat-row *matRowDef=\\\"let row; columns: displayedColumnsUsers;\\\" (click)=\\\"openDialog(row,true)\\\"></tr>\\n          </table>\\n    </mat-tab>\\n    <mat-tab label=\\\"Roles\\\">\\n        <mat-form-field style=\\\"margin-left: 5%\\\">\\n            <input matInput (keyup)=\\\"applyFilterRoles($event.target.value)\\\" placeholder=\\\"Buscar\\\">\\n          </mat-form-field>\\n\\n          <table mat-table [dataSource]=\\\"dataSourceRegistered\\\" class=\\\"table mat-elevation-z8\\\">\\n            <!-- Matricula Column -->\\n            <ng-container matColumnDef=\\\"key\\\">\\n              <th mat-header-cell *matHeaderCellDef> Matricula </th>\\n              <td mat-cell *matCellDef=\\\"let user\\\"> {{user.key}} </td>\\n            </ng-container>\\n\\n            <!-- Name Column -->\\n            <ng-container matColumnDef=\\\"fname\\\">\\n              <th mat-header-cell *matHeaderCellDef> Nombre </th>\\n              <td mat-cell *matCellDef=\\\"let user\\\"> {{user.fname}} </td>\\n            </ng-container>\\n\\n            <!-- Major Column -->\\n            <ng-container matColumnDef=\\\"major\\\">\\n              <th mat-header-cell *matHeaderCellDef> Major </th>\\n              <td mat-cell *matCellDef=\\\"let user\\\"> {{user.major}} </td>\\n            </ng-container>\\n\\n            <!-- Role Column -->\\n            <ng-container matColumnDef=\\\"role\\\">\\n              <th mat-header-cell *matHeaderCellDef> Rol </th>\\n              <td mat-cell *matCellDef=\\\"let user\\\"> {{user.role}} </td>\\n            </ng-container>\\n\\n            <!-- State Column -->\\n            <ng-container matColumnDef=\\\"state\\\">\\n                <th mat-header-cell *matHeaderCellDef> Estado </th>\\n                <td mat-cell *matCellDef=\\\"let user\\\"> {{user.state}} </td>\\n            </ng-container>\\n\\n            <tr mat-header-row *matHeaderRowDef=\\\"displayedColumnsRegistered\\\"></tr>\\n            <tr mat-row *matRowDef=\\\"let row; columns: displayedColumnsRegistered;\\\" (click)=\\\"openDialog(row,true)\\\"></tr>\\n          </table>\\n    </mat-tab>\\n    <mat-tab label=\\\"Usuarios Registrados\\\">\\n        <mat-form-field style=\\\"margin-left: 5%\\\">\\n            <input matInput (keyup)=\\\"applyFilterRegisteredUsers($event.target.value)\\\" placeholder=\\\"Buscar\\\">\\n          </mat-form-field>\\n\\n          <table mat-table [dataSource]=\\\"dataSourceRegisteredUsers\\\" class=\\\"table mat-elevation-z8\\\">\\n            <!-- Matricula Column -->\\n            <ng-container matColumnDef=\\\"key\\\">\\n              <th mat-header-cell *matHeaderCellDef> Matricula </th>\\n              <td mat-cell *matCellDef=\\\"let user\\\"> {{user.key}} </td>\\n            </ng-container>\\n\\n            <!-- Major Column -->\\n            <ng-container matColumnDef=\\\"email\\\">\\n              <th mat-header-cell *matHeaderCellDef> Email </th>\\n              <td mat-cell *matCellDef=\\\"let user\\\"> {{user.email}} </td>\\n            </ng-container>\\n\\n            <!-- Role Column -->\\n            <!-- <ng-container matColumnDef=\\\"uid\\\">\\n              <th mat-header-cell *matHeaderCellDef> Uid </th>\\n              <td mat-cell *matCellDef=\\\"let user\\\"> {{user.uid}} </td>\\n            </ng-container> -->\\n\\n            <tr mat-header-row *matHeaderRowDef=\\\"displayedColumnsRegisteredUsers\\\"></tr>\\n            <tr mat-row *matRowDef=\\\"let row; columns: displayedColumnsRegisteredUsers;\\\"></tr>\\n          </table>\\n    </mat-tab>\\n</mat-tab-group>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AngularFireDatabase } from \"@angular/fire/database\";\nimport {MatTableDataSource} from '@angular/material';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { AddRoleDialogComponent } from \"./add-role-dialog/add-role-dialog.component\";\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.css']\n})\nexport class UsersComponent implements OnInit {\n  displayedColumnsUsers: string[] = ['key', 'fname', 'major', 'role','state'];\n  displayedColumnsRegistered: string[] = ['key', 'fname', 'major', 'role','state'];\n  displayedColumnsRegisteredUsers: string[] = ['key','email'];\n\n  dataSourceUsers : any;\n  dataSourceRegistered : any;\n  dataSourceRegisteredUsers : any;\n  result : string;\n\n  constructor(public dialog: MatDialog, private db : AngularFireDatabase) { }\n\n  ngOnInit() {\n    this.fetchDb();\n  }\n\n  openDialog(row,newUser) {\n    let dialogRefBloque = this.dialog.open(AddRoleDialogComponent, {\n      width: '600px',\n      data: {row,newUser}\n    });\n    dialogRefBloque.afterClosed().subscribe(result => {\n      this.fetchDb();\n    });\n  }\n\n  fetchDb(){\n    this.db.database.ref('database').once('value').then(snap=>{\n      var arrDB = [];\n      snap.forEach(element => {\n        arrDB.push({\n          key : element.key,\n          fname : element.val().fname,\n          major : element.val().major,\n          role : element.val().roll,\n          state : element.val().state\n        })\n      });\n      this.dataSourceUsers = new MatTableDataSource(arrDB);\n    })\n\n    this.db.database.ref('roles').once('value').then(snap=>{\n      var arrDB = [];\n      snap.forEach(element => {\n        arrDB.push({\n          key : element.key,\n          fname : element.val().fname,\n          major : element.val().major,\n          role : element.val().role,\n          state : element.val().state\n        })\n      });\n      this.dataSourceRegistered = new MatTableDataSource(arrDB);\n    })\n\n    this.db.database.ref('registrados').once('value').then(snap=>{\n      var arrDB = [];\n      snap.forEach(element => {\n        arrDB.push({\n          key : element.key,\n          email : element.val().email,\n          uid : element.val().uid\n        })\n      });\n      this.dataSourceRegisteredUsers = new MatTableDataSource(arrDB);\n    })\n\n  }\n\n  applyFilterUsers(filterValue: string) {\n    this.dataSourceUsers.filter = filterValue.trim().toLowerCase();\n  }\n\n  applyFilterRoles(filterValue: string) {\n    this.dataSourceRegistered.filter = filterValue.trim().toLowerCase();\n  }\n\n  applyFilterRegisteredUsers(filterValue: string) {\n    this.dataSourceRegisteredUsers.filter = filterValue.trim().toLowerCase();\n  }\n}\n","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  constructor(){}\n\n  title = 'comite-electoral';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AngularFireModule } from '@angular/fire';\nimport { environment } from '../environments/environment';\nimport { AngularFireAuthModule } from '@angular/fire/auth';\nimport { AngularFireDatabaseModule } from '@angular/fire/database';\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\nimport { AngularFireStorageModule } from '@angular/fire/storage';\nimport { MatNativeDateModule, MatCheckboxModule, MatStepperModule } from '@angular/material'\nimport { ChartModule } from 'angular-highcharts';\n\n\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatInputModule} from '@angular/material';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\n\n\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { NavBarComponent } from './nav-bar/nav-bar.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { AdminHomeComponent } from './admin/home/admin-home/admin-home.component';\nimport { UserHomeComponent } from './user/user-home/user-home.component';\nimport { DashboardEleccionesComponent } from './admin/admin-elecciones/dashboard-elecciones/dashboard-elecciones.component';\nimport { EleccionCardComponent } from './admin/admin-elecciones/eleccion-card/eleccion-card.component';\nimport { EleccionesGridComponent } from './admin/admin-elecciones/elecciones-grid/elecciones-grid.component';\nimport { MatListModule } from '@angular/material/list';\n\nimport { DatabaseService } from './services/database.service';\nimport { AdminDbComponent } from './admin/admin-db/admin-db.component';\nimport { AdminDashboardComponent } from './admin/home/admin-home/admin-dashboard/admin-dashboard.component';\nimport { AdminCardComponent } from './admin/home/admin-home/admin-card/admin-card.component';\nimport { AdminGridComponent } from './admin/home/admin-home/admin-grid/admin-grid.component';\nimport { NavBarAdminComponent } from './admin/nav-bar-admin/nav-bar-admin.component';\nimport { NavBarAsesorComponent } from './asesor/nav-bar-asesor/nav-bar-asesor.component';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { BloqueDialogComponent } from './admin/home/bloque-dialog/bloque-dialog.component';\nimport { EleccionDialogComponent } from './admin/home/eleccion-dialog/eleccion-dialog.component';\nimport { AdminRolesComponent } from './admin/admin-roles/admin-roles.component';\nimport { AdminRegistrosComponent } from './admin/admin-registros/admin-registros.component';\nimport { UsersComponent } from './admin/users/users.component';\nimport { AddRoleDialogComponent } from './admin/users/add-role-dialog/add-role-dialog.component';\nimport { AsesorDashboardComponent } from './asesor/asesor-dashboard/asesor-dashboard.component';\nimport { AdminResultadosComponent } from './admin/admin-resultados/admin-resultados.component';\nimport { CandidatosRegistroComponent } from './candidatos/candidatos-registro/candidatos-registro.component';\nimport { AdminBloquesRegistroComponent } from './admin/admin-bloques-registro/admin-bloques-registro.component';\n\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/login', pathMatch: 'full' },\n  { path: 'login', component: LoginComponent },\n  { path: 'signup', component: SignupComponent},\n  { path: 'admin/admin-elecciones', component: DashboardEleccionesComponent },\n  { path: 'admin/admin-db', component : AdminDbComponent},\n  { path: 'admin/home', component: AdminDashboardComponent},\n  { path: 'admin/admin-roles', component : AdminRolesComponent},\n  { path: 'admin/users', component : UsersComponent },\n  { path: 'admin/admin-registros', component : AdminRegistrosComponent},\n  { path: 'admin/admin-bloquesRegistro', component: AdminBloquesRegistroComponent},\n  { path: 'admin/admin-resultados', component : AdminResultadosComponent},\n  { path: 'asesor/dashboard',component : AsesorDashboardComponent},\n  { path: 'candidatos/bloques', component : CandidatosRegistroComponent},\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    NavBarComponent,\n    SignupComponent,\n    AdminHomeComponent,\n    UserHomeComponent,\n    EleccionCardComponent,\n    EleccionesGridComponent,\n    DashboardEleccionesComponent,\n    AdminDbComponent,\n    AdminDashboardComponent,\n    AdminCardComponent,\n    AdminGridComponent,\n    NavBarAdminComponent,\n    NavBarAsesorComponent,\n    BloqueDialogComponent,\n    EleccionDialogComponent,\n    AdminRolesComponent,\n    AdminRegistrosComponent,\n    UsersComponent,\n    AddRoleDialogComponent,\n    AsesorDashboardComponent,\n    AdminResultadosComponent,\n    CandidatosRegistroComponent,\n    AdminBloquesRegistroComponent\n  ],\n  imports: [\n    RouterModule.forRoot(routes),\n    BrowserModule,\n    AngularFireModule.initializeApp(environment.config),\n    AngularFirestoreModule,\n    AngularFireAuthModule,\n    AngularFireDatabaseModule,\n    AngularFireStorageModule,\n    BrowserAnimationsModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatIconModule,\n    MatButtonModule,\n    MatMenuModule,\n    FormsModule,\n    MatCheckboxModule,\n    MatStepperModule,\n    ReactiveFormsModule,\n    MatGridListModule,\n    MatCardModule,\n    MatDialogModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatListModule,\n    MatTableModule,\n    MatTabsModule,\n    MatTooltipModule,\n    ChartModule\n  ],\n  entryComponents: [BloqueDialogComponent,EleccionDialogComponent,AddRoleDialogComponent],\n\n  providers: [DatabaseService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n#busqueda {\\n\\tbackground-color: #e8e8e8;\\n    /* width: 50%; */\\n    display: block;\\n    align-items: center;\\n    align-content: center;\\n    justify-content: center;\\n    margin: auto;\\n    position: relative;\\n    padding: 25px;\\n\\n}\\n\\n#resultado {\\n\\t/*background-color: #e8e8e8;*/\\n    /* width: 50%; */\\n    display: block;\\n    align-items: center;\\n    align-content: center;\\n    justify-content: center;\\n    margin: auto;\\n    position: relative;\\n\\tpadding: 25px;\\n\\tfont-family: Roboto,\\\"Helvetica Neue\\\",sans-serif;\\n}\\n\\nh1{\\nfont-family: Roboto,\\\"Helvetica Neue\\\",sans-serif;\\n}\\n\\np{\\n\\tfont-family: Roboto,\\\"Helvetica Neue\\\",sans-serif;\\n}\\n\\nh3{\\n\\n}\\n\\ninput{\\n\\tbackground-color: white;\\n\\tpadding: 15px;\\n}\\n\\nbutton{\\n\\tbackground-color: #673ab7;\\n\\tcolor: white;\\n}\\n\\n.button-voted{\\n\\tbackground: #cccccc;\\n\\tcolor: #666666;\\n\\tpointer-events: none;\\n}\\n\\n.button-notVoted{\\n\\tbackground-color: #673ab7;\\n\\tcolor: white;\\n}\\n\"","module.exports = \"<app-nav-bar-asesor></app-nav-bar-asesor>\\n\\n<div id=\\\"busqueda\\\">\\n\\t<h1>B&uacute;squeda de alumnos</h1>\\n\\t<form>\\n\\t\\t<mat-form-field>\\n\\t\\t\\t<input matInput placeholder=\\\"Matr&iacute;cula\\\" [formControl]=\\\"idFormControl\\\" [(ngModel)]=\\\"matriculaAlumno\\\"\\n\\t\\t\\t\\t\\t[errorStateMatcher]=\\\"matcher\\\">\\n\\t\\t\\t<mat-hint>Usando A0 o A00</mat-hint>\\n\\t\\t\\t<mat-error *ngIf=\\\"idFormControl.hasError('id') && !idFormControl.hasError('required')\\\">\\n\\t\\t\\tLa matr&iacute;cula no es v&aacute;lida. Intenta de nuevo.\\n\\t\\t\\t</mat-error>\\n\\t\\t</mat-form-field>\\n\\t</form>\\n\\n\\t<button mat-raised-button (click)=\\\"getAlumno()\\\">Buscar</button>\\n\\n\\t<p>¿No encuentras al alumno?</p>\\n\\t<p>Reg&iacute;stralo como alumno irregular.</p>\\n\\n\\t<button mat-raised-button>Registrar alumno irregular</button>\\n</div>\\n\\n<div id=\\\"resultado\\\">\\n\\t<h1>{{nombreAlumno}}</h1>\\n\\n\\t<h3>Puede votar para:</h3>\\n\\n<div *ngFor=\\\"let eleccion of arrEleccionesAVotar\\\">\\n\\t<div>\\n\\t\\t<div>\\n\\t\\t\\t<h3>{{eleccion.eleccion}}</h3>\\n\\t\\t\\t<button mat-raised-button [ngClass]=\\\"{'button-voted': eleccion.isVoted, 'button-notVoted': !eleccion.isVoted}\\\" (click)=\\\"markAsVoted(eleccion.eleccion,eleccion.bloque)\\\">Registrar voto</button>\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n<!-- <div *ngFor=\\\"let eleccion of arrEleccionesAVotar\\\">\\n\\t<ng-template [ngIf]=\\\"eleccion.isVoted === true\\\">\\n\\t\\t<div>\\n\\t\\t\\t<h3>{{eleccion.eleccion}}</h3>\\n\\t\\t\\t<button mat-raised-button [ngClass]=\\\"['bntStyle']\\\">Votado</button>\\n\\t\\t</div>\\n\\t</ng-template>\\n</div> -->\\n\\n\\n\\n\\t<!-- <div *ngIf=\\\"hasVoted === false; else didVoteButton\\\">\\n\\t\\t<div *ngFor=\\\"let eleccion of arrEleccionesAVotar\\\">\\n\\t\\t\\t<h3>{{eleccion.eleccion}}</h3>\\n\\t\\t\\t<button mat-raised-button (click)=\\\"markAsVoted(eleccion.eleccion,eleccion.bloque)\\\">Registrar voto</button>\\n\\t\\t</div>\\n\\t</div>\\n\\n\\t<ng-template #didVoteButton>\\n\\t\\t<div *ngFor=\\\"let eleccion of arrEleccionesAVotar\\\">\\n\\t\\t\\t<h3>{{eleccion.eleccion}}</h3>\\n\\t\\t\\t<button mat-raised-button disabled style=\\\"background:green; color:white;\\\">Votado</button>\\n\\t\\t</div>\\n\\t</ng-template> -->\\n\\n\\t<!-- <div>\\n\\t\\t<h3>Comité Ejecutivo</h3>\\n\\t\\t<button mat-raised-button>Registrar voto</button>\\n\\t</div> -->\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AngularFireDatabase } from \"@angular/fire/database\";\nimport {FormControl, FormGroupDirective, NgForm, Validators} from '@angular/forms';\nimport {ErrorStateMatcher} from '@angular/material/core';\nimport { Router } from '@angular/router';\n\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\n\n@Component({\n  selector: 'app-asesor-dashboard',\n  templateUrl: './asesor-dashboard.component.html',\n  styleUrls: ['./asesor-dashboard.component.css']\n})\nexport class AsesorDashboardComponent implements OnInit {\n\n  // btnStyle : string;\n  matriculaAlumno : string;\n  carreraAlumno : string;\n  estadoAlumno : string;\n  nombreAlumno : string;\n\n  bloque : string;\n  votandoPara : string;\n  arrCarreras : string[];\n  estado : string;\n  hasVoted ; boolean;\n  arrEleccionesAVotar : Array<any> = [];\n  alumnoExist = false;\n\n\n  idFormControl = new FormControl('', [\n    Validators.required,\n    Validators.email,\n  ]);\n\n  matcher = new MyErrorStateMatcher();\n\n  constructor(private db : AngularFireDatabase, private router : Router) { }\n\n  ngOnInit() {\n    // this.btnStyle = 'button';\n  }\n\n  getAlumno(){\n    this.hasVoted = false\n    var fueVotado = false\n    this.arrEleccionesAVotar =[]\n    this.db.database.ref(`database/${this.matriculaAlumno}/`).once('value').then(snap=>{\n        // this.alumnoExist = true\n        var arrAuxElecciones : Array<any> = [];\n        this.carreraAlumno = snap.val().major\n        this.estadoAlumno = snap.val().state\n        this.nombreAlumno = snap.val().fname\n\n        // if(this.alumnoExist){\n\n      this.db.database.ref('2018Semestre2').once('value').then(snap=>{\n        snap.forEach(element => {\n          // Elecion de carreras - bloque CSA\n          if(element.val().inProgress === true && element.val().type === \"csa\"){\n            var actualBloque = element.val().name\n            // this.bloque = element.val().name\n            console.log(this.bloque)\n            this.db.database.ref(`2018Semestre2/${actualBloque}/Elecciones`).once('value').then(snap=>{\n              snap.forEach(element => {\n                console.log(element.val().name);\n                  this.arrCarreras = element.val().carreras;\n                  for(let carrera of this.arrCarreras){\n                    if(carrera === this.carreraAlumno){\n                      fueVotado = false\n                      console.log(element.val().name);\n                      this.searchiIfVoted(this.matriculaAlumno,actualBloque,element.val().name).then((result) =>{\n                        if(result === \"true\"){\n                          fueVotado = true;\n                          console.log(\"SI JALOOOOO\" + fueVotado)\n                        }\n                        arrAuxElecciones.push({eleccion: element.val().name, bloque: actualBloque, isVoted: fueVotado});\n                        console.log(arrAuxElecciones);\n                      });\n\n                    }\n                  }\n                });\n            });\n            // Eleccion general de Comite Ejecutivo FETEC\n          }else if(element.val().inProgress === true && element.val().type === \"ejecutivo\"){\n              this.db.database.ref(`2018Semestre2/${element.val().name}`).once('value').then(snap=>{\n                this.searchiIfVoted(this.matriculaAlumno, element.val().name, snap.val().name).then((result) =>{\n                  fueVotado = false\n                  if(result === \"true\"){\n                    fueVotado = true;\n                    console.log(\"SI JALOOOOO\" + fueVotado)\n                  }\n                  arrAuxElecciones.push({eleccion: element.val().name, bloque: snap.val().name, isVoted: fueVotado});\n                  console.log(arrAuxElecciones);\n                });\n              });\n\n            // Eleccion general de CARES\n          }else if(element.val().inProgress === true && element.val().type === \"care\"){\n              var nombreBloqueCare = element.val().name\n              console.log(nombreBloqueCare)\n              this.db.database.ref(`2018Semestre2/${element.val().name}/Elecciones`).once('value').then(snap=>{\n                snap.forEach(element => {\n                  this.estado = element.val().estado;\n                  if(this.estado === this.estadoAlumno){\n                    fueVotado = false\n                    this.searchiIfVoted(this.matriculaAlumno, nombreBloqueCare, element.val().name).then((result) =>{\n                      if(result === \"true\"){\n                        fueVotado = true;\n                        console.log(\"SI JALOOOOO\" + fueVotado)\n                      }\n                      arrAuxElecciones.push({eleccion: element.val().name, bloque: nombreBloqueCare, isVoted: fueVotado});\n                      console.log(arrAuxElecciones);\n                    });\n                  }\n                });\n              });\n\n          }else{\n            console.log(\"No hay elecciones disponibles para este usuario\");\n          }\n\n        });\n      });\n      console.log(arrAuxElecciones);\n      this.arrEleccionesAVotar = arrAuxElecciones;\n    });\n  }\n\n  markAsVoted(eleccion,bloque){\n    this.votandoPara = eleccion\n    this.hasVoted = false\n    this.db.database.ref(`2018Semestre2/${bloque}/Elecciones/${this.votandoPara}/votados/${this.matriculaAlumno}`).once('value').then(snap=>{\n      if(snap.exists()){\n        this.hasVoted = true\n      }else{\n        console.log(\"no ha votado\")\n        if(this.hasVoted == false){\n          // Marcar el voto como registrado\n          this.db.database.ref(`2018Semestre2/${bloque}/Elecciones/${this.votandoPara}/votados/${this.matriculaAlumno}`).set({\n            timestamp : new Date().toString(),\n            key : this.matriculaAlumno\n          });\n\n          this.db.database.ref(`2018Semestre2/${bloque}/Elecciones/${this.votandoPara}`).once('value').then(snap=>{\n            this.db.database.ref(`2018Semestre2/${bloque}/Elecciones/${this.votandoPara}`).update({votos: snap.val().votos+1});\n          });\n          // this.btnStyle = 'button-voted';\n        }\n      }\n    });\n    this.getAlumno();\n  }\n\n  searchiIfVoted(matricula,bloque,eleccion) {\n    var filterDataAccordingToDatePromise = new Promise((resolve, reject) =>{\n      this.db.database.ref(`2018Semestre2/${bloque}/Elecciones/${eleccion}/votados/${matricula}`).once('value').then(snap=>{\n        if(snap.exists()){\n          resolve(\"true\")\n        }else{\n          resolve(\"false\")\n        }\n      });\n    });\n    return filterDataAccordingToDatePromise;\n  }\n\n}\n","module.exports = \".navbar {\\n}\\n\\n.button-row{\\n\\tdisplay: flex;\\n\\tjustify-content: flex-end;\\n}\\n\\n.navbar-brand {\\n  font-family: \\\"helvetica\\\";\\n  font-size: 20px;\\n  color: white;\\n  float: left;\\n  display: block;\\n  padding: 20px 20px;\\n}\\n\\n.container-fuid {\\n    list-style-type: none;\\n    margin: 0;\\n    padding: 0;\\n    overflow: hidden;\\n\\tbackground-color: #212121;\\n\\theight: 100px;\\n}\\n\\n.nabvar-button {\\n    display: block;\\n    color: white;\\n    text-align: center;\\n    padding: 30px 16px;\\n\\ttext-decoration: none;\\n\\tfont-weight: 300;\\n\\tletter-spacing: 3px;\\n\\tfont-size: 12px;\\n}\\n\\n.nabvar-button:hover{\\n  color: black;\\n  background-color: #FFFFFF;\\n}\\n\\na ul{\\n  display: block;\\n  color: white;\\n  text-align: center;\\n  padding: 14px 16px;\\n  text-decoration: none;\\n}\\n\\n/* li a:hover {\\n    background-color: white;\\n    color: black;\\n} */\\n\\n.nabvar-logout-button{\\n  display: block;\\n  color: white;\\n  text-align: center;\\n  padding: 5px 22px;\\n  margin-right: 14px;\\n  margin-top: 25px;\\n  text-decoration: none;\\n  border-radius: 50px;\\n  border-width: 2.5px;\\n  font-weight: 300;\\n  letter-spacing: 3px;\\n  font-size: 12px;\\n  height: 50px;\\n}\\n\\n.nabvar-round-button{\\n  display: block;\\n  color: white;\\n  text-align: center;\\n  padding: 5px 20px;\\n  margin-right: 14px;\\n  margin-top: 5px;\\n  text-decoration: none;\\n  border: 2px solid white;\\n  border-radius: 300px;\\n}\\n\\n.nabvar-round-button:hover{\\n  color: black;\\n  border-radius: 300px;\\n  background-color: #FFFFFF;\\n}\\n\"","module.exports = \"<nav class=\\\"navbar nabbar-default\\\">\\n  <div class=\\\"container-fuid\\\">\\n    <div>\\n      <a class=\\\"navbar-brand\\\">COMIT&Eacute; <br> ELECTORAL <br> FEITESM</a>\\n    </div>\\n\\n    <!-- MARK: Displayed only when ASESOR session is stablished -->\\n    <div class=\\\"button-row\\\">\\n      <button class=\\\"nabvar-button\\\" mat-button>Registro de votos</button>\\n  \\t\\t<button class=\\\"nabvar-logout-button\\\" mat-stroked-button (click)=\\\"logout()\\\">CERRAR SESI&Oacute;N</button>\\n  \\t</div>\\n\\n  </div>\\n</nav>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-nav-bar-asesor',\n  templateUrl: './nav-bar-asesor.component.html',\n  styleUrls: ['./nav-bar-asesor.component.css']\n})\nexport class NavBarAsesorComponent implements OnInit {\n\n  constructor(private auth : AngularFireAuth, private router : Router) { }\n\n  ngOnInit() {\n  }\n\n  logout(){\n    this.auth.auth.signOut().then(()=>{\n      this.router.navigateByUrl('login');\n    })\n  }\n\n}\n","module.exports = \".checkbox {\\n    margin-right: 2em;\\n}\\n\\n.lista1 {\\n    margin-right: 10em;\\n    width: 20em;\\n}\\n\\n.lista2 {\\n    margin-right: 5em !important;\\n    width: 15em !important;\\n}\\n\\n.placeholder {\\n    color:  #aaa;\\n}\\n\\n.csa-card{\\n  max-width: 70%;\\n  margin-left: auto;\\n  margin-right: auto;\\n  background: linear-gradient(to top left, #702082 38%, #993399 100%);\\n}\\n\\n.care-card{\\n  max-width: 70%;\\n  margin-left: auto;\\n  margin-right: auto;\\n  background: linear-gradient(to top left, #ff671f 18%, #ff9900 78%);\\n}\\n\\n.ejecutivo-card{\\n  max-width: 70%;\\n  margin-left: auto;\\n  margin-right: auto;\\n  background: linear-gradient(to bottom right, #41b6e6 38%, #3399ff 100%);\\n}\\n\\np{\\n  font-size: 20px;\\n}\\n\\nh1{\\n  color: black;\\n  font-family: helvetica;\\n}\\n\\nul{\\n  list-style: none;\\n  columns: 2;\\n  -webkit-columns: 2;\\n  -moz-columns: 2;\\n  color: white;\\n}\\n\\n.card-title{\\n  font-size: 40px;\\n  color: white;\\n}\\n\\n*{\\n  font-family: helvetica;\\n}\\n\\n.card-buttons {\\n  text-align: center;\\n  color: white;\\n}\\n\\n.edit-button{\\n  background-color: #0d98ba;\\n  display: inline-block;\\n  color: white;\\n}\\n\\n.selectBloque-button{\\n  background-color: green;\\n  display: inline-block;\\n  color: white;\\n}\\n\\n.material-icons{\\n  font-size: 200px;\\n  color: green;\\n  display: inherit;\\n}\\n\\n.confirmacion{\\n  text-align: center;\\n}\\n\\n.content{\\n  display: inherit;\\n}\\n\\n.gruposAEleccion{\\n  color: white;\\n}\\n\"","module.exports = \"<app-nav-bar-asesor></app-nav-bar-asesor>\\n\\n<link href=\\\"https://fonts.googleapis.com/icon?family=Material+Icons\\\"\\n      rel=\\\"stylesheet\\\">\\n<div *ngIf=\\\"bloqueIsSelected === false && isSubmitted === false\\\">\\n  <h1>Registro de Candidatos</h1>\\n  <h3>Selecciona el bloque al cual pertenece el grupo estudiantíl al cual te quieres registrar</h3>\\n  <mat-grid-list cols=\\\"1\\\" rowHeight=\\\"300px\\\" *ngFor=\\\"let bloque of arrDataBloques\\\">\\n      <mat-card *ngIf=\\\"bloque.type === 'csa'\\\" class=\\\"csa-card\\\">\\n        <mat-card-header>\\n          <mat-card-title class=\\\"card-title\\\">{{bloque.name}}</mat-card-title>\\n          <mat-card-subtitle>16/07/2018 9:00 AM - 6:00 PM</mat-card-subtitle>\\n        </mat-card-header>\\n        <mat-card-content>\\n          <p class=\\\"gruposAEleccion\\\">Grupos a elección</p>\\n            <ul *ngFor=\\\"let grupo of bloque.gruposEstudiantiles\\\">\\n              <li>{{grupo}}<li>\\n            </ul>\\n        </mat-card-content>\\n        <mat-card-actions class=\\\"card-buttons\\\">\\n          <button mat-raised-button class=\\\"selectBloque-button\\\" (click)=\\\"selectBloque(bloque.name)\\\">Seleccionar Bloque</button>\\n        </mat-card-actions>\\n      </mat-card>\\n\\n    <ng-template [ngIf]=\\\"bloque.type === 'care'\\\">\\n      <mat-card class=\\\"care-card\\\">\\n        <mat-card-header>\\n          <mat-card-title class=\\\"card-title\\\">{{bloque.name}}</mat-card-title>\\n          <mat-card-subtitle>16/07/2018 9:00 AM - 6:00 PM</mat-card-subtitle>\\n        </mat-card-header>\\n        <mat-card-content>\\n          <p class=\\\"gruposAEleccion\\\">Grupos a elección</p>\\n            <ul *ngFor=\\\"let grupo of bloque.gruposEstudiantiles\\\">\\n              <li>{{grupo}}<li>\\n            </ul>\\n        </mat-card-content>\\n        <mat-card-actions class=\\\"card-buttons\\\">\\n          <button mat-raised-button class=\\\"selectBloque-button\\\" (click)=\\\"selectBloque(bloque.name)\\\">Seleccionar Bloque</button>\\n        </mat-card-actions>\\n      </mat-card>\\n    </ng-template>\\n\\n    <ng-template [ngIf]=\\\"bloque.type === 'ejecutivo'\\\">\\n      <mat-card class=\\\"ejecutivo-card\\\">\\n        <mat-card-header>\\n          <mat-card-title class=\\\"card-title\\\">{{bloque.name}}</mat-card-title>\\n          <mat-card-subtitle>16/07/2018 9:00 AM - 6:00 PM</mat-card-subtitle>\\n        </mat-card-header>\\n        <mat-card-content>\\n          <p class=\\\"gruposAEleccion\\\">Grupos a elección</p>\\n            <ul *ngFor=\\\"let grupo of bloque.gruposEstudiantiles\\\">\\n              <li>{{grupo}}<li>\\n            </ul>\\n        </mat-card-content>\\n        <mat-card-actions class=\\\"card-buttons\\\">\\n          <button mat-raised-button class=\\\"selectBloque-button\\\" (click)=\\\"selectBloque(bloque.name)\\\">Seleccionar Bloque</button>\\n        </mat-card-actions>\\n      </mat-card>\\n    </ng-template>\\n  </mat-grid-list>\\n\\n</div>\\n\\n<ng-template [ngIf]=\\\"bloqueIsSelected === true && isSubmitted === false\\\">\\n  <div class=\\\"container\\\">\\n    <h1>Registro de Candidatos</h1>\\n    <h3>Datos de Registro</h3>\\n\\n    <mat-horizontal-stepper #stepper>\\n        <mat-step>\\n          <form [formGroup]=\\\"candidatura\\\">\\n            <ng-template matStepLabel>Informacion Grupo Estudiantil</ng-template>\\n            <div class= \\\"row\\\">\\n              <div class=\\\"col-md-6 col-lg-6\\\">\\n                  <mat-form-field appearance = \\\"outline\\\" required>\\n                    <mat-select placeholder=\\\"Grupo Estudiantil\\\" formControlName=\\\"grupoEstudiantil\\\">\\n                      <mat-option *ngFor=\\\"let grupo of arrAvailableGruposEstudiantiles\\\" [value]=\\\"grupo\\\">\\n                        {{grupo}}\\n                      </mat-option>\\n                    </mat-select>\\n                  </mat-form-field>\\n              </div>\\n              <div class=\\\"col-md-6 col-lg-6\\\">\\n                  <mat-checkbox formControlName=\\\"periodo\\\" class=\\\"checkbox\\\" value=\\\"Enero-Diciembre\\\">Enero-Diciembre</mat-checkbox>\\n                  <mat-checkbox formControlName=\\\"periodo\\\" class=\\\"checkbox\\\" value=\\\"Agosto-Mayo\\\">Agosto-Mayo</mat-checkbox>\\n              </div>\\n              <div class=\\\"col-md-6 col-lg-6\\\">\\n                <mat-form-field appearance = \\\"outline\\\"  class=\\\"lista1\\\">\\n                    <mat-label>Nombre de la candidatura</mat-label>\\n                    <input matInput placeholder=\\\"Nombre de la candidatura\\\" formControlName=\\\"nombreCandidatura\\\" required>\\n                </mat-form-field>\\n              </div>\\n            </div>\\n            <br>\\n            <div>\\n              <button mat-button class=\\\"edit-button\\\" matStepperNext>Siguiente</button>\\n            </div>\\n          </form>\\n        </mat-step>\\n        <mat-step>\\n          <form [formGroup]=\\\"presidente\\\">\\n            <ng-template matStepLabel>Informacion Candidato Presidente</ng-template>\\n            <mat-grid-list cols=\\\"2\\\" rowHeight=\\\"4:3\\\">\\n                <mat-form-field appearance = \\\"outline\\\"  class=\\\"lista1\\\">\\n                    <mat-label>Nombre(s)</mat-label>\\n                    <input matInput placeholder=\\\"Nombre(s)\\\" formControlName=\\\"nombresPresidente\\\" required>\\n                </mat-form-field>\\n                <mat-form-field appearance = \\\"outline\\\"  class=\\\"lista1\\\">\\n                    <mat-label>Apellidos</mat-label>\\n                    <input class=\\\"p-5\\\" matInput placeholder=\\\"Apellidos\\\" formControlName=\\\"apellidosPresidente\\\" required>\\n                  </mat-form-field>\\n            </mat-grid-list>\\n\\n            <mat-grid-list cols=\\\"4\\\" rowHeight=\\\"4:3\\\">\\n                <mat-form-field appearance = \\\"outline\\\" class=\\\"lista2\\\">\\n                    <mat-label>Matricula</mat-label>\\n                    <input matInput placeholder=\\\"Matricula\\\" formControlName=\\\"matriculaPresidente\\\" required>\\n                </mat-form-field>\\n                <mat-form-field appearance = \\\"outline\\\" class=\\\"lista2\\\">\\n                        <mat-select placeholder=\\\"Carrera\\\" formControlName=\\\"carreraPresidente\\\" required>\\n                          <mat-option *ngFor=\\\"let carrera of arrMajors\\\" [value]=\\\"carrera\\\">\\n                            {{carrera}}\\n                          </mat-option>\\n                        </mat-select>\\n                </mat-form-field>\\n                <mat-form-field appearance = \\\"outline\\\" class=\\\"lista2\\\">\\n                        <mat-select placeholder=\\\"Semestre\\\" formControlName=\\\"semestrePresidente\\\" required>\\n                          <mat-option value=\\\"1\\\">1</mat-option>\\n                          <mat-option value=\\\"2\\\">2</mat-option>\\n                          <mat-option value=\\\"3\\\">3</mat-option>\\n                          <mat-option value=\\\"4\\\">4</mat-option>\\n                          <mat-option value=\\\"5\\\">5</mat-option>\\n                          <mat-option value=\\\"6\\\">6</mat-option>\\n                          <mat-option value=\\\"7\\\">7</mat-option>\\n                          <mat-option value=\\\"8\\\">8</mat-option>\\n                          <mat-option value=\\\"9\\\">9</mat-option>\\n                          <mat-option value=\\\"10\\\">10+</mat-option>\\n                        </mat-select>\\n                </mat-form-field>\\n                <mat-form-field appearance = \\\"outline\\\" class=\\\"lista2\\\">\\n                    <mat-label>Promedio</mat-label>\\n                    <input class=\\\"p-5\\\" matInput placeholder=\\\"Promedio\\\" formControlName=\\\"promedioPresidente\\\" required>\\n                </mat-form-field>\\n            </mat-grid-list>\\n\\n            <mat-grid-list cols=\\\"2\\\" rowHeight=\\\"4:3\\\">\\n                <mat-form-field appearance = \\\"outline\\\"  class=\\\"lista1\\\">\\n                    <mat-label>Celular</mat-label>\\n                    <input matInput placeholder=\\\"Celular\\\" formControlName=\\\"celularPresidente\\\" required>\\n                </mat-form-field>\\n                <mat-form-field appearance = \\\"outline\\\"  class=\\\"lista1\\\">\\n                    <mat-label>E-Mail</mat-label>\\n                    <input class=\\\"p-5\\\" matInput placeholder=\\\"E-Mail\\\" formControlName=\\\"emailPresidente\\\" required>\\n                  </mat-form-field>\\n            </mat-grid-list>\\n            <button mat-button class=\\\"edit-button\\\" matStepperPrevious>Anterior</button>\\n            <button mat-button class=\\\"edit-button\\\" matStepperNext>Siguiente</button>\\n          </form>\\n        </mat-step>\\n        <mat-step>\\n        <form [formGroup]=\\\"vice\\\">\\n            <ng-template matStepLabel>Informacion Candidato Videpresidente</ng-template>\\n            <mat-grid-list cols=\\\"2\\\" rowHeight=\\\"4:3\\\">\\n                <mat-form-field appearance = \\\"outline\\\"  class=\\\"lista1\\\">\\n                    <mat-label>Nombre(s)</mat-label>\\n                    <input matInput placeholder=\\\"Nombre(s)\\\" formControlName=\\\"nombresVice\\\" required>\\n                </mat-form-field>\\n                <mat-form-field appearance = \\\"outline\\\"  class=\\\"lista1\\\">\\n                    <mat-label>Apellidos</mat-label>\\n                    <input class=\\\"p-5\\\" matInput placeholder=\\\"Apellidos\\\" formControlName=\\\"apellidosVice\\\" required>\\n                  </mat-form-field>\\n            </mat-grid-list>\\n\\n            <mat-grid-list cols=\\\"4\\\" rowHeight=\\\"4:3\\\">\\n                <mat-form-field appearance = \\\"outline\\\" class=\\\"lista2\\\">\\n                    <mat-label>Matricula</mat-label>\\n                    <input matInput placeholder=\\\"Matricula\\\" formControlName=\\\"matriculaVice\\\" required>\\n                </mat-form-field>\\n                <mat-form-field appearance = \\\"outline\\\" class=\\\"lista2\\\">\\n                    <mat-select placeholder=\\\"Carrera\\\" formControlName=\\\"carreraVice\\\" required>\\n                      <mat-option *ngFor=\\\"let carrera of arrMajors\\\" [value]=\\\"carrera\\\">\\n                        {{carrera}}\\n                      </mat-option>\\n                      </mat-select>\\n                </mat-form-field>\\n                <mat-form-field appearance = \\\"outline\\\" class=\\\"lista2\\\" required>\\n                    <mat-select placeholder=\\\"Semestre\\\" formControlName=\\\"semestreVice\\\" required>\\n                        <mat-option value=\\\"1\\\">1</mat-option>\\n                        <mat-option value=\\\"2\\\">2</mat-option>\\n                        <mat-option value=\\\"3\\\">3</mat-option>\\n                        <mat-option value=\\\"4\\\">4</mat-option>\\n                        <mat-option value=\\\"5\\\">5</mat-option>\\n                        <mat-option value=\\\"6\\\">6</mat-option>\\n                        <mat-option value=\\\"7\\\">7</mat-option>\\n                        <mat-option value=\\\"8\\\">8</mat-option>\\n                        <mat-option value=\\\"9\\\">9</mat-option>\\n                        <mat-option value=\\\"10\\\">10+</mat-option>\\n                      </mat-select>\\n                </mat-form-field>\\n                <mat-form-field appearance = \\\"outline\\\" class=\\\"lista2\\\">\\n                    <mat-label>Promedio</mat-label>\\n                    <input class=\\\"p-5\\\" matInput placeholder=\\\"Promedio\\\" formControlName=\\\"promedioVice\\\" required>\\n                </mat-form-field>\\n            </mat-grid-list>\\n\\n            <mat-grid-list cols=\\\"2\\\" rowHeight=\\\"4:3\\\">\\n                <mat-form-field appearance = \\\"outline\\\"  class=\\\"lista1\\\">\\n                    <mat-label>Celular</mat-label>\\n                    <input matInput placeholder=\\\"Celular\\\" formControlName=\\\"celularVice\\\" required>\\n                </mat-form-field>\\n                <mat-form-field appearance = \\\"outline\\\"  class=\\\"lista1\\\">\\n                    <mat-label>E-Mail</mat-label>\\n                    <input class=\\\"p-5\\\" matInput placeholder=\\\"E-Mail\\\" formControlName=\\\"emailVice\\\" required>\\n                  </mat-form-field>\\n            </mat-grid-list>\\n\\n            <button mat-button class=\\\"edit-button\\\" matStepperPrevious>Anterior</button>\\n            <button mat-button class=\\\"edit-button\\\" matStepperNext>Siguiente</button>\\n          </form>\\n        </mat-step>\\n\\n        <mat-step>\\n            <ng-template matStepLabel>Documentos Registro</ng-template>\\n            <p>DOCUMENTOS REGISTRO</p>\\n            <button class=\\\"btn\\\">Carta director de carrera</button>\\n            <input type=\\\"file\\\" style=\\\"display: inline-block;\\\" (change)=\\\"carta($event)\\\" placeholder=\\\"Upload file\\\">\\n            <button class=\\\"btn\\\">Comprobante de pago</button>\\n            <input type=\\\"file\\\" style=\\\"display: inline-block;\\\" (change)=\\\"comprobante($event)\\\" placeholder=\\\"Upload file\\\">\\n            <button class=\\\"btn\\\">Licencia</button>\\n            <input type=\\\"file\\\" style=\\\"display: inline-block;\\\" (change)=\\\"licencia($event)\\\" placeholder=\\\"Upload file\\\">\\n            <br>\\n            <button mat-button class=\\\"edit-button\\\" matStepperPrevious>Anterior</button>\\n            <button mat-button class=\\\"edit-button\\\" (click)=terminar() >Terminar</button>\\n        </mat-step>\\n      </mat-horizontal-stepper>\\n  </div>\\n</ng-template>\\n\\n<ng-template [ngIf]=\\\"isSubmitted === true\\\">\\n  <div class=\\\"confirmacion\\\">\\n    <i class=\\\"material-icons\\\">check_circle</i>\\n    <h1 class=\\\"content\\\">Todo listo, registro enviado exitosamente</h1>\\n    <p class=\\\"content\\\">Hemos recibido tu registro, sin embargo no HA SIDO ACEPTADO, la Comisión de Participación Estudiantil y Elecciones\\n    verificará tu información así como los documentos que anexaste y se pondra en contacto contigo para notificarte\\n    sobre el estatus de tu registro.\\n    </p>\\n    <p class=\\\"content\\\">Para cualquier duda o aclaración, por favor envia un correo a hola@comiteelectoral.mx</p>\\n  </div>\\n</ng-template>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {FormBuilder, FormGroup, Validators, FormControl} from '@angular/forms';\nimport { AngularFireStorage } from \"@angular/fire/storage\";\nimport { AngularFireAuth } from \"@angular/fire/auth\";\nimport { AngularFireDatabase } from \"@angular/fire/database\";\n\nimport { finalize } from 'rxjs/operators';\n\n@Component({\n  selector: 'candidatos-registro',\n  templateUrl: './candidatos-registro.component.html',\n  styleUrls: ['./candidatos-registro.component.css']\n})\nexport class CandidatosRegistroComponent implements OnInit {\n\n  firstFormGroup : FormGroup;\n  secondFormGroup : FormGroup;\n  thirdFormGroup : FormGroup;\n  currentUser : any;\n  candidatura: any;\n  presidente : any;\n  vice : any;\n  uploadPercentCarta : any;\n  uploadPercentComprobante : any;\n  uploadPercentLicencia : any;\n  downloadURLCarta: any;\n  downloadURLComprobante: any;\n  downloadURLLicencia: any\n  arrAvailableGruposEstudiantiles : Array<string> = [];\n  arrMajors : Array<string> = [];\n\n  bloqueIsSelected: boolean;\n  isSubmitted: boolean;\n  nombreBloque : string;\n  selectedBloque : string;\n  arrDataBloques : Array<any> = [];\n  estado : string; // para validar si el bloque esta activo para recivir registros o no\n  type: string;\n\n  constructor(private _formBuilder : FormBuilder,private storage: AngularFireStorage, private auth : AngularFireAuth, private db : AngularFireDatabase) {\n     auth.auth.onAuthStateChanged(user=>{\n      this.currentUser = user;\n    })\n   }\n\n  ngOnInit() {\n\n    this.bloqueIsSelected = false;\n    this.isSubmitted = false;\n    this.fetchBloques();\n    this.fetchMajors();\n\n    this.firstFormGroup = this._formBuilder.group({\n      firstCtrl : ['', Validators.required]\n    });\n\n    this.secondFormGroup = this._formBuilder.group({\n      secondCtrl : ['', Validators.required]\n    });\n\n    this.thirdFormGroup = this._formBuilder.group({\n      thirdCtrl : ['', Validators.required]\n    });\n\n    this.candidatura = new FormGroup({\n      grupoEstudiantil: new FormControl('',[Validators.required]),\n      nombreCandidatura: new FormControl('',[Validators.required]),\n      periodo: new FormControl('',[Validators.required]),\n    });\n    this.presidente = new FormGroup({\n      carreraPresidente: new FormControl('', [Validators.required]),\n      nombresPresidente: new FormControl('', [Validators.required]),\n      apellidosPresidente: new FormControl('', [Validators.required]),\n      semestrePresidente: new FormControl('', Validators.required),\n      promedioPresidente: new FormControl('', Validators.required),\n      celularPresidente: new FormControl('', Validators.required),\n      matriculaPresidente: new FormControl('', Validators.required),\n      emailPresidente: new FormControl('', Validators.required),\n    });\n    this.vice = new FormGroup({\n      carreraVice: new FormControl('', [Validators.required]),\n      nombresVice: new FormControl('', [Validators.required]),\n      apellidosVice: new FormControl('', [Validators.required]),\n      semestreVice: new FormControl('', Validators.required),\n      promedioVice: new FormControl('', Validators.required),\n      celularVice: new FormControl('', Validators.required),\n      matriculaVice: new FormControl('', Validators.required),\n      emailVice: new FormControl('', Validators.required),\n    });\n  }\n\n  fetchMajors(){\n    this.db.database.ref('majors').once('value').then(snap=>{\n      snap.forEach(element => {\n        this.arrMajors.push(element.val().name)\n      })\n    })\n  }\n\n  fetchBloques(){\n    this.db.database.ref(`Bloques de registro/2018/Ago-Dic`).once('value').then(snap=>{\n      snap.forEach(element => {\n        var arrGruposEstudiantiles : Array<string> = []\n        this.nombreBloque = element.val().name\n        this.type = element.val().type\n        this.db.database.ref(`Bloques de registro/2018/Ago-Dic/${this.nombreBloque}/Elecciones`).once('value').then(snap=>{\n          snap.forEach(element => {\n            arrGruposEstudiantiles.push(element.val().name)\n          });\n        });\n         this.arrDataBloques.push({name: this.nombreBloque, type: this.type, gruposEstudiantiles: arrGruposEstudiantiles})\n         console.log(this.arrDataBloques)\n      });\n    });\n  }\n\n  selectBloque(bloque){\n    this.bloqueIsSelected = true;\n    this.selectedBloque = bloque\n    for(let bloque of this.arrDataBloques){\n      if(bloque.name === this.selectedBloque){\n        this.arrAvailableGruposEstudiantiles = bloque.gruposEstudiantiles;\n      }\n    }\n  }\n\n  terminar(){\n    // this.db.database.ref(`candidatura`).push({\n    //   nombrePresidente:\"Miguel Cuellar\",\n    //   nombresVice:\"Carmelo Ramirez\",\n    //   carta:this.downloadURLCarta,\n    //   comprobante:this.downloadURLComprobante,\n    //   licencia:this.downloadURLLicencia\n    // })\n    var datosRegistro = {\n      ...this.candidatura.value,\n      ...this.presidente.value,\n      ...this.vice.value,\n      bloque : this.selectedBloque\n    };\n    var aux = false\n    console.log(datosRegistro);\n    datosRegistro.carta = this.downloadURLCarta;\n    datosRegistro.comprobante = this.downloadURLComprobante;\n    datosRegistro.licencia = this.downloadURLLicencia;\n    this.pushRegistro(datosRegistro).then((result) =>{\n      if(result === \"true\"){\n        aux = true;\n      }\n      this.isSubmitted = aux;\n    });\n  }\n\n  pushRegistro(datosRegistro) {\n    var promise = new Promise((resolve, reject) =>{\n      this.db.database.ref(`candidaturas/${this.currentUser.uid}`).set(datosRegistro,\n        function(error) {\n        if (!error) {\n          resolve(\"true\")\n          console.log(\"promise successfull\")\n        } else {\n          resolve(\"false\")\n        }\n      });\n    });\n    return promise;\n  }\n\n  carta(event){\n    const fileCarta = event.target.files[0];\n    const filePath = `carta${this.currentUser.uid}`;\n    const fileRef = this.storage.ref(filePath);\n    const task = this.storage.upload(filePath, fileCarta);\n\n    // observe percentage changes\n    this.uploadPercentCarta = task.percentageChanges();\n    // get notified when the download URL is available\n    task.snapshotChanges().pipe(\n        finalize(() => {\n          fileRef.getDownloadURL().subscribe(url=>{\n            this.downloadURLCarta = url\n          })\n        })\n     )\n    .subscribe()\n    }\n\n\n  comprobante(event){\n    const fileComprobante = event.target.files[0];\n    const filePath = `comprobante${this.currentUser.uid}`;\n    const fileRef = this.storage.ref(filePath);\n    const task = this.storage.upload(filePath, fileComprobante);\n\n    // observe percentage changes\n    this.uploadPercentComprobante = task.percentageChanges();\n    // get notified when the download URL is available\n    task.snapshotChanges().pipe(\n        finalize(() => {\n          fileRef.getDownloadURL().subscribe(url=>{\n            this.downloadURLComprobante = url\n          })\n        })\n     )\n    .subscribe()\n  }\n\n  licencia(event){\n    const fileLicencia = event.target.files[0];\n    const filePath = `licencia${this.currentUser.uid}`;\n    const fileRef = this.storage.ref(filePath);\n    const task = this.storage.upload(filePath, fileLicencia);\n\n    // observe percentage changes\n    this.uploadPercentLicencia = task.percentageChanges();\n    // get notified when the download URL is available\n    task.snapshotChanges().pipe(\n        finalize(() => {\n          fileRef.getDownloadURL().subscribe(url=>{\n            this.downloadURLLicencia = url;\n            console.log(url);\n          })\n        })\n     )\n    .subscribe()\n  }\n}\n","module.exports = \".container{\\n\\n}\\n\\n.center {\\n    margin: auto;\\n    width: 50%;\\n    padding: 10px;\\n}\\n\\n\"","module.exports = \"<app-nav-bar></app-nav-bar>\\n<div class=\\\"container center\\\">\\n  <mat-form-field>\\n    <input matInput [(ngModel)]=\\\"email\\\" placeholder=\\\"Correo institucional\\\" type='email' >\\n  </mat-form-field>\\n<br>\\n  <mat-form-field>\\n    <input matInput [(ngModel)]=\\\"password\\\" placeholder=\\\"Contrase&ntilde;a\\\" type='password'>\\n  </mat-form-field>\\n<br>\\n\\n<button mat-raised-button color=\\\"primary\\\" (click)=\\\"login()\\\">Login</button>\\n\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { AngularFireDatabase } from \"@angular/fire/database\";\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  email : string = \"\";\n  password : string = \"\";\n  matricula : string;\n  rolAsignado : string;\n\n  constructor(public auth: AngularFireAuth, private db : AngularFireDatabase, private router : Router) { }\n\n  ngOnInit() {\n    this.auth.authState.subscribe((user)=>{\n      if (user) {\n        console.log(\"User logged in\")\n        //this.router.navigateByUrl('home');\n      }else{\n        this.router.navigateByUrl('login');\n      }\n    })\n  }\n\n  login(){\n    this.auth.auth.signInWithEmailAndPassword(this.email,this.password).then((user)=>{\n      console.log(user)\n\n      this.db.database.ref('registrados').once('value').then(snap=>{\n        snap.forEach(element => {\n            if(this.email == element.val().email){\n              this.matricula = element.val().matricula;\n              //function to fetch\n              this.db.database.ref(`roles/${this.matricula}/`).once('value').then(snap=>{\n                if(snap.exists()){\n                  this.rolAsignado = snap.val().role\n                  console.log(this.rolAsignado);\n                }\n\n                if(this.rolAsignado === \"asesor\"){\n                    this.router.navigateByUrl('/asesor/dashboard')\n                } else if (this.rolAsignado === \"admin\"){\n                    this.router.navigateByUrl('/admin/home')\n                } else {\n                    this.router.navigateByUrl('/candidatos/bloques')\n                }\n              })\n          }\n        });\n      })\n\n    }).catch((error)=>{\n      alert(error);\n    })\n  }\n\n}\n","module.exports = \".navbar {\\n}\\n\\n.button-row{\\n\\tdisplay: flex;\\n\\tjustify-content: flex-end;\\n}\\n\\n.navbar-brand {\\n  font-family: \\\"helvetica\\\";\\n  font-size: 20px;\\n  color: white;\\n  float: left;\\n  display: block;\\n  padding: 20px 20px;\\n}\\n\\n.container-fuid {\\n    list-style-type: none;\\n    margin: 0;\\n    padding: 0;\\n    overflow: hidden;\\n\\tbackground-color: #212121;\\n\\theight: 100px;\\n}\\n\\n.nabvar-button {\\n    display: block;\\n    color: white;\\n    text-align: center;\\n    padding: 30px 16px;\\n\\ttext-decoration: none;\\n\\tfont-weight: 300;\\n\\tletter-spacing: 3px;\\n\\tfont-size: 12px;\\n}\\n\\n.nabvar-button:hover{\\n  color: black;\\n  background-color: #FFFFFF;\\n}\\n\\na ul{\\n  display: block;\\n  color: white;\\n  text-align: center;\\n  padding: 14px 16px;\\n  text-decoration: none;\\n}\\n\\n/* li a:hover {\\n    background-color: white;\\n    color: black;\\n} */\\n\\n.nabvar-logout-button{\\n  display: block;\\n  color: white;\\n  text-align: center;\\n  padding: 5px 22px;\\n  margin-right: 14px;\\n  margin-top: 25px;\\n  text-decoration: none;\\n  border-radius: 50px;\\n  border-width: 2.5px;\\n  font-weight: 300;\\n  letter-spacing: 3px;\\n  font-size: 12px;\\n  height: 50px;\\n}\\n\\n.nabvar-round-button{\\n  display: block;\\n  color: white;\\n  text-align: center;\\n  padding: 5px 20px;\\n  margin-right: 14px;\\n  margin-top: 5px;\\n  text-decoration: none;\\n  border: 2px solid white;\\n  border-radius: 300px;\\n}\\n\\n.nabvar-round-button:hover{\\n  color: black;\\n  border-radius: 300px;\\n  background-color: #FFFFFF;\\n}\\n\"","module.exports = \"<nav class=\\\"navbar nabbar-default\\\">\\n  <div class=\\\"container-fuid\\\">\\n    <div>\\n      <a class=\\\"navbar-brand\\\">COMIT&Eacute; <br> ELECTORAL <br> FEITESM</a>\\n    </div>\\n\\n    <!-- MARK: Displayed only when NO SESSION is stablished -->\\n\\n    <ul>\\n      <button class=\\\"nabvar-round-button\\\" (click)=\\\"signup()\\\" mat-button>REGÍSTRATE</button>\\n    </ul>\\n\\n    <!-- MARK: Displayed only when ADMIN session is stablished -->\\n\\n\\t<!-- <div class=\\\"button-row\\\">\\n\\t\\t<button class=\\\"nabvar-button\\\" mat-button [matMenuTriggerFor]=\\\"elecciones\\\">ELECCIONES</button>\\n\\t\\t<mat-menu #elecciones=\\\"matMenu\\\" overlapTrigger=\\\"false\\\">\\n\\t\\t  <button mat-menu-item routerLink=\\\"/admin/admin-elecciones\\\">Administraci&oacute;n de elecciones</button>\\n\\t\\t  <button mat-menu-item>Resultados</button>\\n\\t\\t</mat-menu>\\n\\n\\t\\t<button class=\\\"nabvar-button\\\" mat-button [matMenuTriggerFor]=\\\"registros\\\">REGISTROS</button>\\n\\t\\t<mat-menu #registros=\\\"matMenu\\\" overlapTrigger=\\\"false\\\">\\n\\t\\t  <button mat-menu-item>Administraci&oacute;n de bloques de registros</button>\\n\\t\\t  <button mat-menu-item>Tabla de registros</button>\\n\\t\\t</mat-menu>\\n\\n\\t\\t<button class=\\\"nabvar-button\\\" mat-button [matMenuTriggerFor]=\\\"alumnos\\\">USUARIOS</button>\\n\\t\\t<mat-menu #alumnos=\\\"matMenu\\\" overlapTrigger=\\\"false\\\">\\n\\t\\t  <button mat-menu-item routerLink=\\\"/admin/admin-db\\\">Administraci&oacute;n de base de datos</button>\\n\\t\\t  <button mat-menu-item routerLink=\\\"/admin/users\\\">Roles de usuario</button>\\n\\t\\t</mat-menu>\\n\\n\\t\\t<button class=\\\"nabvar-logout-button\\\" mat-stroked-button (click)=\\\"logout()\\\">CERRAR SESI&Oacute;N</button>\\n\\t</div> -->\\n\\n    <!-- MARK: Displayed only when ASESOR session is stablished -->\\n    <!-- <ul>\\n      <button class=\\\"nabvar-button\\\" mat-button>Registro de votos</button>\\n    </ul>\\n    <ul>\\n      <button class=\\\"nabvar-logout-button\\\" mat-flat-button color=\\\"warn\\\">Cerrar Sesión</button>\\n    </ul> -->\\n\\n  </div>\\n</nav>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AngularFireAuth } from '@angular/fire/auth'\n\n@Component({\n  selector: 'app-nav-bar',\n  templateUrl: './nav-bar.component.html',\n  styleUrls: ['./nav-bar.component.css']\n})\nexport class NavBarComponent implements OnInit {\n\n  constructor(private router : Router, private auth : AngularFireAuth) { }\n\n  ngOnInit() {\n  }\n\n  signup(){\n    this.router.navigateByUrl('/signup');\n  }\n\n  logout(){\n    this.auth.auth.signOut().then(()=>{\n      this.router.navigateByUrl('/login');\n    })\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { AngularFirestore, AngularFirestoreCollection, AngularFirestoreDocument } from '@angular/fire/firestore';\nimport { Observable } from 'rxjs/';\nimport { Eleccion } from '../models/eleccion';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class DatabaseService {\n  eleccionesCollection: AngularFirestoreCollection<Eleccion>;\n  elecciones: Observable<Eleccion[]>;\n\n  constructor(public afs: AngularFirestore) {\n    this.eleccionesCollection = this.afs.collection('elecciones');\n    this.elecciones = this.eleccionesCollection.valueChanges();\n\n  }\n\n  getElecciones(){\n    return this.elecciones;\n  }\n\n}\n","module.exports = \"mat-card {\\n    max-width: 250px;\\n    text-align:  center;\\n    margin: auto;   \\n}\\n\\nmat-card-title {\\n    text-align: center;\\n}\\n\\ndiv[ng-view]{\\n    height: 100%;\\n}\\n\\ndiv {\\n    height: 100%;\\n    width: 100%;\\n    background-color: darkgrey;\\n    min-width: 100%;\\n    min-height: 100%;\\n    margin: 0;\\n}\\n\\nhtml {\\n    min-height: 100%;\\n    width: 100%;\\n    height: 100%;\\n    margin: 0;\\n}\\n\\nbody{\\n    margin: 0;\\n    min-height: 100%;\\n    width: 100%;\\n    height: 100%;\\n}\"","module.exports = \"<app-nav-bar></app-nav-bar>\\n\\n<div class=\\\"container center\\\" style=\\\"padding-top: 50px\\\" layout-align = \\\"center center\\\">\\n  <mat-card>\\n      <mat-card-title><b>Registro</b></mat-card-title>\\n    <mat-card-content>\\n        <mat-form-field appearance=\\\"outline\\\">\\n          <mat-label>Correo Institucional</mat-label>\\n          <input matInput [(ngModel)]=\\\"email\\\" placeholder=\\\"Correo Institucional\\\">\\n          <mat-hint>ej. a01234567@itesm.mx</mat-hint>\\n        </mat-form-field>\\n        <br>\\n        <mat-form-field appearance=\\\"outline\\\">\\n          <mat-label>Matricula</mat-label>\\n          <input matInput [(ngModel)]=\\\"matricula\\\" placeholder=\\\"Matricula\\\">\\n          <mat-hint>ej. a0.....</mat-hint>\\n        </mat-form-field>\\n        <br>\\n        <mat-form-field appearance=\\\"outline\\\">\\n          <mat-label>Contraseña</mat-label>\\n          <input type = \\\"password\\\" matInput [(ngModel)]=\\\"password\\\" placeholder=\\\"Contraseña\\\">\\n        </mat-form-field>\\n        <br>\\n        <mat-form-field appearance=\\\"outline\\\">\\n          <mat-label>Confirmar Contraseña</mat-label>\\n          <input type=\\\"password\\\" matInput [(ngModel)]=\\\"confPassword\\\" placeholder=\\\"Confirmar Contraseña\\\">\\n        </mat-form-field>\\n        <button mat-raised-button color=\\\"primary\\\" (click)=\\\"signUp()\\\">Registrarse</button>\\n    </mat-card-content>\\n  </mat-card>\\n</div>\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AngularFireAuth } from \"@angular/fire/auth\";\nimport { AngularFireDatabase } from \"@angular/fire/database\";\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n  email : string;\n  password :string;\n  confPassword : string;\n  matricula : string;\n  rolAsignado : string;\n  state : string;\n  major : string;\n  fname : string;\n\n  constructor(private auth : AngularFireAuth, private db : AngularFireDatabase, private router: Router) { }\n\n  ngOnInit() {\n\n  }\n\n  signUp(){\n    if(this.password === this.confPassword) {\n      this.auth.auth.createUserWithEmailAndPassword(this.email,this.password).then((user)=>{\n        this.db.database.ref(`userId/${user.user.uid}`).set({\n          matricula : this.matricula\n        })\n        //Obtener datos de la base de datos de los registrados candidatos\n        this.db.database.ref(`database/${this.matricula}/`).once('value').then(snap=>{\n          //setear info de nuevo candidato\n          this.state = snap.val().state;\n          this.major = snap.val().major;\n          this.fname = snap.val().fname;\n\n          this.db.database.ref(`registrados/${this.matricula}`).set({\n            matricula : this.matricula,\n            email: this.email,\n            uid : user.user.uid,\n            state : this.state,\n            major : this.major,\n            fname : this.fname\n          })\n\n          this.db.database.ref(`roles/${this.matricula}/`).once('value').then(snap=>{\n            if(snap.exists()){\n              this.rolAsignado = snap.val().role\n              console.log(this.rolAsignado);\n            }\n\n            if(this.rolAsignado === \"admin\"){\n              this.router.navigateByUrl('/admin/home');\n            }else if(this.rolAsignado === \"asesor\"){\n              this.router.navigateByUrl('/asesor/dashboard');\n            }else{\n              this.router.navigateByUrl('/candidatos/bloques');\n            }\n          })\n        })\n      })\n    } else {\n      alert('Both passwords must match')\n    }\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<app-nav-bar></app-nav-bar>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-user-home',\n  templateUrl: './user-home.component.html',\n  styleUrls: ['./user-home.component.css']\n})\nexport class UserHomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  config : {\n    apiKey: \"AIzaSyA5-JOdqhE2ZcdFq5YOkYeZe8OTTz1NpUg\",\n    authDomain: \"comite-electoral.firebaseapp.com\",\n    databaseURL: \"https://comite-electoral.firebaseio.com\",\n    projectId: \"comite-electoral\",\n    storageBucket: \"comite-electoral.appspot.com\",\n    messagingSenderId: \"949974661394\"\n  }\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}